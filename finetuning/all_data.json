[
    {
        "prompt": "Log in to Digital Customer Portal as Admin - Landing page is displayed",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile \"Show me my Requests\" - Page with dashboard with all requests created by the user is opened on tab Created RequestsFor reference check attached screenshot<br>",
        "completion": "tc.button.click(EButton.CONTACT);\nWaitFor.condition(tc.modal::exists);\nString modalTitle = \"Contact Support\";\nString modalContent = \"For any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233\";\ntc.stepEvaluator\n.add(() -> tc.modal.getTitle().equalsIgnoreCase(modalTitle), \"modal title not found\")\n.add(() -> tc.modal.getContent().equalsIgnoreCase(modalContent), \"Modal content not found\");\ntc.addStepInfo(\"\"\"\nPopup with following text is displayed:\nContact Support\nFor any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233\nFor reference check attached screenshot\n\"\"\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Verify that page contains following tabs:Page contains tabs:<br>- My Dashboard<br>- Created Requests<br>- Submitted<br>- Under Review<br>- Pending Requestor Response<br>- Referred Out<br>- Referred Out to Me<br>- Resolved<br><br>For reference check attached screenshot - Page contains tabs:- My Dashboard<br>- Created Requests<br>- Submitted<br>- Under Review<br>- Pending Requestor Response<br>- Referred Out<br>- Referred Out to Me<br>- Resolved",
        "completion": "tc.button.click(EButton.CLOSE);\ntc.addStepInfo(\"Landing page is displayed\", true, !tc.modal.exists(),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Schedule button - Schedule screen should be reflected with Tasks, Clipboard, Gantt, Map, Working on Domain options",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_WEBS_SHOP_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.externalUserLogin(ETestData.EXTERNAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.tile.exists(ETile.REPORT_AN_ISSUE),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Task option - Filter, Sorted by : Call Id, Search Task, Split Task list domain, List of notifications option should be reflected",
        "completion": "tc.stepEvaluator.reset();\nWaitFor.condition(() -> !tc.browser.getActiveUser(EActions.USERNAME).isEmpty());\ntc.stepEvaluator\n.add(() -> tc.menu.exists(EMenu.LANGUAGE), \"Language icon is not present\")\n.add(() -> tc.menu.exists(EMenu.SETTINGS), \"Settings icon is not present\")\n.add(() -> tc.button.exists(EButton.CONTACT), \"Contact button is not present\")\n.add(() -> tc.button.exists(EButton.NOTIFICATIONS), \"Notifications button is not present\")\n.add(() -> !tc.browser.getActiveUser(EActions.ICON).isEmpty(), \"user icon is not present\")\n.add(() -> !tc.browser.getActiveUser(EActions.USERNAME).isEmpty(), \"user name is not present\")\n.add(() ->  tc.button.exists(EButton.APP_NAME), \"App icon is not present\");\n\ntc.addStepInfo(\"\"\"\nCheck that page contains top ribbon with:\n- Siemens healthineers Logo\n- My Digital Lab Assistant (vX.X.X)\n- Contact icon\n- Settings icon\n- Notification bell icon\n- Icon with name shortcut\n- Name of logged in user\"\"\",\n\"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Search the Notification<br> - Notification should be appear under the Clipboard tab and assign the notification to the CSE.<br>",
        "completion": "tc.stepEvaluator.reset();\nList<String> wantedTiles = Arrays.asList(\"Report an issue with an order or delivery\", \"Show me my Requests\",\n\"Question about an order or eSupport assistance\", \"Questions about my Account\");\nList<String> actualTiles = tc.tile.getAllTilesName();\nboolean areEqual = wantedTiles.size() == actualTiles.size() &&\nwantedTiles.stream().allMatch(item ->\nCollections.frequency(wantedTiles, item) == Collections.frequency(actualTiles, item));\ntc.addStepInfo(\"\"\"\nLanding page tile content is according screenshot and consists of following tiles:\n- Report an issue with an order or delivery\n- Show me my Requests\n- Question about an order or eSuport assistance\n- Question about my Account\"\"\",\ntrue ,areEqual, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Actions icon of the @notification - Below options should be reflected for each notification<br>Edit<br>Site Assigned Engineers                                                               Change Status<br>Show on Gantt<br>Show on Map<br>Remove from Clipboard<br>Pin Task<br>Comment<br>Check Rules<br>Get Candidates<br>Schedule<br>Unschedule                                                                                   Relaxed Get Candidates",
        "completion": "tc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Which request would you like to submit?\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened\", true,\ntc.browser.getPageTitle().contains(\"Which request would you like to submit?\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Edit button - Task pop up window should open with below tabs<br>Assignment, General , Bundling, Comments, Time, Customer , Location , Resource, Dependencies, Notes , Functional Location , History",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.SHOW_ME_MY_REQUESTS));\ntc.tile.open(ETile.SHOW_ME_MY_REQUESTS);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"take a look at your Requests\"));\ntc.addStepInfo(\"Page with dashboard with all requests created by the user is opened\", true,\ntc.browser.getPageTitle().contains(\"take a look at your Requests\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Assigment - Below details should be reflected with Ok, Apply, Cancel buttons<br>Assigment Start<br>Duration<br>Assigment Finish<br>Assigned Resource",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.QUESTIONS_ABOUT_AN_ORDER));\ntc.tile.open(ETile.QUESTIONS_ABOUT_AN_ORDER);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Which request would you like to submit?\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened\", true,\ntc.browser.getPageTitle().contains(\"Which request would you like to submit?\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on General - General notification details are reflected and CSE skills can be added",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.QUESTIONS_ABOUT_MY_ACCOUNT));\ntc.tile.open(ETile.QUESTIONS_ABOUT_MY_ACCOUNT);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Which request would you like to submit?\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened\", true,\ntc.browser.getPageTitle().contains(\"Which request would you like to submit?\")\n, new ComparerOptions().takeScreenShotPlatform());\n\n});\n}\n}"
    },
    {
        "prompt": "Launch CAD application and login to the application - CAD application launched and logged in successfully",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen<br>Search Field<br>Home<br>Schedule<br>Calendar Management<br>Views<br>Analytics",
        "completion": "WaitFor.condition(() -> tc.button.exists(EButton.ADMIN));\ntc.button.click(EButton.ADMIN);\nWaitFor.condition(() -> tc.tile.exists(ETile.USER_MANAGEMENT));\nList<String> actualTiles = tc.tile.getAllTilesName();\ntc.addStepInfo(\"Page with 3 options for admins is displayed\", 3, actualTiles.size(),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Clik on Calendar Management - Calendars and Resources fields along with that Manage Filters, Sorting, Refresh and New options should be display",
        "completion": "List<String> expectedTiles = Arrays.asList(\"User Management\", \"Escalation Criteria\" ,\"Admin Ruleset\");\ntc.addStepInfo(\"\"\"\nPage contains tiles:\n- User Management\n- Escalation Criteria\n- Admin Ruleset\"\"\", true, actualTiles.equals(expectedTiles), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Navigate to Calendars - Name and Base fields should be displayed",
        "completion": "tc.tile.open(ETile.USER_MANAGEMENT);\nWaitFor.condition(() -> !tc.table.getItemsFromColumn(ETable.USER_TABLE, EColumn.byIndex(0)).isEmpty());\nboolean isUserManagementOpened = !tc.table.getItemsFromColumn(ETable.USER_TABLE, EColumn.byIndex(0)).isEmpty();\ntc.addStepInfo(\"User management page is displayed with list of all users\", true, isUserManagementOpened\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Manage Filters Option - Filters Management - Calendar screen page should be displayed",
        "completion": "String gid = \"Z004XU7E\";\ntc.edit.sendKeys(EEdit.SEARCH, gid);\nWaitFor.condition(() -> tc.table.getItemsFromColumn(ETable.USER_TABLE, EColumn.byIndex(0)).contains(gid));\nboolean isUserDisplayed = tc.table.getItemsFromColumn(ETable.USER_TABLE, EColumn.byIndex(0)).contains(gid);\ntc.addStepInfo(\"Only users matching search conditions are displayed\", true, isUserDisplayed\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Add - Calendar filter 01 * - Condition should be displayed",
        "completion": "tc.button.click(EButton.EDIT);\nWaitFor.condition(tc.modal::exists);\ntc.addStepInfo(\"\"\"\nPopup with user details, assigned roles and teams is displayed\nFor reference check attached screenshot\"\"\", true, tc.modal.exists(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter the Condition by clicking on  Add conditions i.e, \"Select a property field\" like \"Name contains 400\" - Condition should be entered",
        "completion": "tc.button.click(EButton.UPDATE_USER);\nWaitFor.condition(() -> tc.table.getItemsFromColumn(ETable.USER_TABLE, EColumn.byIndex(0)).contains(gid));\nboolean isUserDisplayedAfterUpdate = tc.table.getItemsFromColumn(ETable.USER_TABLE, EColumn.byIndex(0)).contains(gid);\ntc.addStepInfo(\"User management page is dipslayed users matching search conditions\", true,\nisUserDisplayedAfterUpdate, new ComparerOptions().takeScreenShotPlatform());\n});\n}\n\n}"
    },
    {
        "prompt": "Log in to Digital Customer Portal - Landing page is displayed",
        "completion": "tc.notification.performActions(EAction.EDIT);\nWaitFor.condition(()->tc.modal.exists(EModal.MODAL));\nWaitFor.specificTime(Duration.ofSeconds(5));\ntc.addStepInfo(\"Task pop up window should open with below tabs\\n\" +\n\"Assignment, General , Bundling, Comments, Time, Customer , Location , Resource, Dependencies, Notes , Functional Location , History\",\ntrue,tc.modal.getTitle().equals(\"Task\"),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 6\ntc.tab.select(ETab.ASSIGNMENT);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Assignment Start:\",\"Duration:\",\"Assignment Finish:\",\"Assigned Resource:\")),\n\"Some labels that should be present under assignment tab are not present\");\ntc.addStepInfo(\"Below details should be reflected with Ok, Apply, Cancel buttons : Assigment Start ,Duration ,Assigment Finish ,Assigned Resource\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 7\ntc.tab.select(ETab.GENERAL);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Notification:\",\"Notification Task:\",\n\"DISP Task Short Text:\",\"TRP:\",\"Task Type:\",\"SAP Priority:\",\"Priority:\",\"Calendar:\",\"Status:\",\n\"Duration:\",\"Short Text:\",\"In Jeopardy:\",\"Effect Code:\")),\n\"Some labels that should be present under general tab are not present\");\ntc.addStepInfo(\"General notification details are reflected and CSE skills can be added\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 8\ntc.tab.select(ETab.COMMENTS);\nWaitFor.specificTime(Duration.ofSeconds(3));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"DISP Task Short Text:\",\"Next Action Date:\",\n\"Task Creation:\",\"Additional Task Reason:\",\"ETA Canceled By:\")),\n\"Some labels that should be present under comments tab are not present\");\ntc.addStepInfo(\"Any comments added present in SAP is reflected here with ETA cancellation \" +\n\"details and Site Assigned Engineers details\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 9\ntc.tab.select(ETab.TIME);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Early Start:\",\"Due Date:\",\n\"DISP Task Creation Date:\",\"Appointment Start:\",\"Appointment Finish:\",\"Dispatch Date:\",\n\"Notification Creation Date:\",\"Additional Travel:\",\"Schedule Date:\",\"Time Zone:\")),\n\"Some labels that should be present under time tab are not present\");\ntc.addStepInfo(\"Early start and due date , Appointment date and time All date and time, \" +\n\"Schedule details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 10\ntc.tab.select(ETab.CUSTOMER);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Customer:\", \"Contact Name:\", \"Contact Phone:\", \"Contact Phone Extension:\",\n\"Contact E-Mail:\", \"Contract ID:\", \"Contract Line:\", \"Contract Description:\", \"Customer Addresses:\")),\n\"Some labels that should be present under customer tab are not present\");\ntc.addStepInfo(\"Customer Details and Contract details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 11\ntc.tab.select(ETab.LOCATION);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Latitude:\",\"Longitude:\",\n\"Region:\",\"District:\",\"Street:\",\"City:\", \"State:\",\"Postal code:\")),\n\"Some labels that should be present under location tab are not present\");\ntc.addStepInfo(\"Location latitude and longitude details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 12\ntc.tab.select(ETab.RESOURCES);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Additional Resources:\",\"Secondary Resources:\",\n\"Required Resources:\",\"Preferred Resources:\")),\n\"Some labels that should be present under resources tab are not present\");\ntc.addStepInfo(\"Primary, Secondary,Required , Additional resources details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 13\ntc.tab.select(ETab.DEPENDENCIES);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().contains(\"Critical:\"),\n\"Some labels that should be present under dependencies tab are not present\");\ntc.addStepInfo(\"Time dependencies and Resource dependencies option should be reflected and user should be able to add the same\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 14\ntc.tab.select(ETab.NOTES);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Site Message(s):\",\"Notification Long Text:\", \"DISP Task Long Text:\")),\n\"Some labels that should be present under notes tab are not present\");\ntc.addStepInfo(\"Any messages like Site messages, long text should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 15\ntc.tab.select(ETab.FUNCTIONAL_LOCATION);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"FL Description:\",\"Functional Location:\",\n\"Equipment Description:\",\"Equipment:\",\"Sales Area:\",\"Distribution Channel:\", \"Division:\",\"Family Description:\")),\n\"Some labels that should be present under functional location tab are not present\");\ntc.addStepInfo(\"FL details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 16\ntc.button.click(EButton.ARROW_RIGHT);\nWaitFor.specificTime(Duration.ofSeconds(3));\ntc.tab.select(ETab.HISTORY);\nWaitFor.specificTime(Duration.ofSeconds(5));\ntc.spinner.waitForSpinner(ESpinner.TABLE_LOADER,Duration.ofSeconds(5));\ntc.spinner.waitForSpinnerToDisappear(ESpinner.TABLE_LOADER,Duration.ofSeconds(10));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.table.getAllColumnNames(ETable.HISTORY).containsAll(List.of(\"Edit Date\",\"Edited By\",\n\"Triggered Action\",\"Status\", \"Rule Violating\",\"In Jeopardy\")),\n\"Columns present under history tab are not present\")\n.add(()->tc.table.getRowsCount(ETable.HISTORY) > 0 ,\"No Data found in History table\");\ntc.addStepInfo(\"Notification history details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n});\n}\n}"
    },
    {
        "prompt": "Launch CAD Application and Click on Schedule button - Schedule screen should be reflected with Tasks, Clipboard, Gantt, Map, Working on Domain options",
        "completion": "tc.notification.performActions(EAction.SITE_ASSIGNED_ENGINEERS);\ntc.addStepInfo(\"Site Assigned Engineers pop up window should be reflected with list of \" +\n\"engineers assigned for the notification with OK button\",\ntrue,tc.modal.getTitle().equals(\"Site Assigned Engineers\"),\nnew ComparerOptions().takeScreenShotPlatform());\n});\n}\n}"
    },
    {
        "prompt": "Tester clicks on left side menu and selects \"Bulk Transfer Task\"<br> - \"Bulk Reassign\" screen opens<br>",
        "completion": "tc.notification.performActions(EAction.BOOK_APPOINTMENT);\nWaitFor.condition(() -> tc.button.isDisplayed(EButton.GET_APPOINTMENTS));\ntc.addStepInfo(\"Appointment Booking pop up should be reflected with Get Appointments / close buttons and Appointment \" +\n\"Start date field\", true, tc.button.isDisplayed(EButton.CLOSE) && tc.edit.isDisplayed(EEdit.DATE_TIME_PICKER),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Tester searches any user in \"Reassign from\" field -> Select any task listed in the table - \"Reassign\" button is now enabled",
        "completion": "final String t2_date = Generator.getSpecificDate(new DateManipulator().setDay(1), new SimpleDateFormat(\"dd/MM/yyyy hh:mm\"));\ntc.edit.setValue(EEdit.byIndex(0), t2_date);\ntc.combo.select(EComboBox.OPEN_THE_TIME_VIEW, \"11:00 AM\");\ntc.button.click(EButton.GET_APPOINTMENTS);\ntc.spinner.waitForSpinner(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(10), true);\ntc.spinner.waitForSpinnerToDisappear(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(30), true);\ntc.addStepInfo(\"Appointments available for the week should be reflected.\", true, this.isAppointmentVisible(),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Tester clicks on \"Reassign\" - Bulk Transfer Assignment popup window displayed",
        "completion": "this.selectAppointment();\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.modal.getTitle().contains(\"Book Slot\"), \"Modal not found!\")\n// TODO: 5/27/2024 can't verify `because byIndex not implemented\n//                    .add(()-> tc.button.isDisplayed(EButton.byIndex(1)), \"Button 'CANCEL' not found!\")\n.add(()-> tc.button.isDisplayed(EButton.BOOK_APPOINTMENT), \"'Book Appointment' button not found!\");\ntc.addStepInfo(\"CSE Slot should be selected and Book Slot window popup should be displayed with Book Appointment and \" +\n\"Cancel button\", \"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Update the details -> Click Cancel - Bulk Transfer Assignment popup window will be closed",
        "completion": "tc.button.click(EButton.BOOK_APPOINTMENT);\ntc.spinner.waitForSpinner(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(10), true);\ntc.spinner.waitForSpinnerToDisappear(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(30), true);\ntc.addStepInfo(\"Appointment Details should be reflected.\", true, this.getBookedDetails().contains(\"Appointment Details\"),new ComparerOptions().takeScreenShotPlatform());\n});\n}\n\nprivate boolean isAppointmentVisible()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"form[name='ABSlotsSelect'] table div[class='ng-scope SHS_card']\"), root);// TODO: 5/14/2024 need to add on table implementation\nif(data != null)\n{\nreturn data.isDisplayed();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\nreturn false;\n}\n\nprivate void selectAppointment()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"form[name='ABSlotsSelect'] table div[class='ng-scope SHS_card']\"), root);// TODO: 5/27/2024 need to add on table implementation\nif(data != null)\n{\ndata.click();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\n}\n\nprivate String getBookedDetails()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"div[name='ShowBookingDetails']\"), root);// TODO: 5/27/2024 need to add on table implementation\nif(data != null)\n{\nreturn data.getText();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\nreturn \"\";\n}\n}"
    },
    {
        "prompt": "Launch CAD application and login to the application - Home screen should be reflected",
        "completion": "tc.notification.performActions(EAction.SITE_ASSIGNED_ENGINEERS);\ntc.addStepInfo(\"Site Assigned Engineers pop up window should be reflected with list of \" +\n\"engineers assigned for the notification with OK button\",\ntrue,tc.modal.getTitle().equals(\"Site Assigned Engineers\"),\nnew ComparerOptions().takeScreenShotPlatform());\n});\n}\n}"
    },
    {
        "prompt": "URL : https://na1.kinaxis.net/web/SIET04_QA002/<br>Open Rapid Response by clicking on the URL given above.<br> - Rapid Response will be visible.",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_WEBS_SHOP_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.externalUserLogin(ETestData.EXTERNAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.tile.exists(ETile.REPORT_AN_ISSUE),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Open the workbook \u2018SHS S&OP Demand Supply Balancing\u2019<br> - workbook \u2018SHS S&OP Demand Supply Balancing\u2019 is opened in RapidResponse<br>",
        "completion": "tc.tile.open(ETile.QUESTIONS_ABOUT_MY_ACCOUNT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "The data settings dialogue box pops up with default values.<br><br> - data setting dialogue is shown in pop up.<br>",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Worksheet \u2018Demand Supply Balancing \u2013 Units Summary\u2019 is opened.<br><br> - \u2018Demand Supply Balancing \u2013 Units Summary\u2019 is opened.<br>",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Create a private scenario using the 'S&OP Candidate' scenario. - A private scenario using the 'S&OP Candidate' is created<br>",
        "completion": "tc.stepEvaluator.reset();\ntc.edit.sendKeys(EEdit.SUBJECT, subject);\ntc.edit.sendKeys(EEdit.REASON, reason);\nWaitFor.specificTime(Duration.ofSeconds(1));\ntc.combo.select(EComboBox.SHS_TEAM, shsTeam);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equalsIgnoreCase(subject), \"subject is not editable\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not editable\")\n.add(() -> tc.edit.exists(EEdit.SOLD_TO), \"Sold to is not editable\")\n.add(() -> tc.edit.exists(EEdit.SHIP_TO), \"Ship to is not editable\")\n.add(() -> tc.edit.exists(EEdit.ADDITIONAL_EMAIL), \"emailID is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\", tc.stepEvaluator\n.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "You will see consensus Override highlighted . Enter the override quantity for a month you choose to override<br><br> - quantity for a month can be overwritten.<br>",
        "completion": "tc.edit.sendKeys(EEdit.BROWSE_FILES_INPUT, path);\nString selectedFile = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of each individual file is created in section Attachments\", true,\npath.contains(selectedFile), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Example \u2013 entered 1000 in Consensus Override for Dec-22 and then Press \u2018Save\u2019 <br><br> - After the record is saved, the \u2018Demand Plan\u2019 row is updated with the override quantity.<br>",
        "completion": "String selectedFile1 = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of file is created in section Attachments\", true,\npath.contains(selectedFile1), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Launch CAD application and login to the application - CAD application launched and logged in successfully",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_WEBS_SHOP_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.externalUserLogin(ETestData.EXTERNAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.tile.exists(ETile.REPORT_AN_ISSUE),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen<br>Search Field<br>Home<br>Schedule<br>Calendar Management<br>Views<br>Analytics",
        "completion": "tc.button.click(EButton.CONTACT);\nWaitFor.condition(tc.modal::exists);\nString modalTitle = \"Contact Support\";\nString modalContent = \"For any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233\";\ntc.stepEvaluator\n.add(() -> tc.modal.getTitle().equalsIgnoreCase(modalTitle), \"modal title not found\")\n.add(() -> tc.modal.getContent().equalsIgnoreCase(modalContent), \"Modal content not found\");\ntc.addStepInfo(\"\"\"\nPopup with following text is displayed:\nContact Support\nFor any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233\nFor reference check attached screenshot\n\"\"\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on View Option - Views option should contains the following suboptions like:<br>Capacity Limitations<br>Capacity Used Daily<br>Education Waitlist<br>Resource Territory<br>Task<br>Engineer",
        "completion": "tc.button.click(EButton.CLOSE);\ntc.addStepInfo(\"Landing page is displayed\", true, !tc.modal.exists(),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Navigate to Resource Territory - Resource Territory View page with the list of Resource details should be displayed",
        "completion": "tc.menu.select(EMenu.LANGUAGE);\ntc.addStepInfo(\"Options English and Deutsch are displayed.\", true, tc.menu.isMenuItemsDisplayed()\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Check the availablity of  Manage Filter, Sorting, Refresh , Duplicate ,Delete, New and Export options - Manage filter, sorting,  refresh, Delete,New , Export option should be  displayed",
        "completion": "tc.menu.selectFromDropDown(EMenu.LANGUAGE, \"Deutsch\");\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Willkommen\"));\nboolean isLanguageGM = tc.browser.getPageTitle().contains(\"Willkommen\");\ntc.addStepInfo(\"Landing page is displayed. Language is changed to german language.\", true, isLanguageGM,\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Check the availability of fields like Date , Resource Name , Territories, Address, Max Distance,Max Travel Time - Date , Resource Name , Territories, Address, Max Distance,Max Travel Time fields with detail list should be displayed",
        "completion": "tc.menu.selectFromDropDown(EMenu.LANGUAGE, \"English\");\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Welcome\"));\nboolean isLanguageEN = tc.browser.getPageTitle().contains(\"Welcome\");\ntc.addStepInfo(\"Landing page is displayed. Language is changed to English language.\", true, isLanguageEN,\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Export - Data present in the Resource Territories view page should be exported and file is downloaded in local device in the Excel format",
        "completion": "tc.menu.select(EMenu.SETTINGS);\ntc.addStepInfo(\"Options 'Theme' and 'Email Notification Settings' are displayed.\", true, tc.menu.isMenuItemsDisplayed()\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Open the exported Excel file - Exported Excel file should be opened in the local device",
        "completion": "tc.menu.selectFromDropDown(EMenu.SETTINGS, \"User Settings\");\nWaitFor.specificTime(Duration.ofSeconds(2));\nWaitFor.condition(() -> tc.toggle.exists(EToggle.byIndex(0)));\ntc.addStepInfo(\"\"\"\nEmail Notifications page is displayedAll notifications are turned on by default.\nFor reference check attached screenshot\"\"\", true, tc.toggle.exists(EToggle.byIndex(0))\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Validate the data present export file and and data present in the Resource Territory view - Data should be validated.",
        "completion": "tc.stepEvaluator.reset();\ntc.toggle.check(EToggle.byIndex(1));\ntc.toggle.uncheck(EToggle.byIndex(1));\nWaitFor.condition(() -> !tc.browser.getMessage().isEmpty(), Duration.ofSeconds(7));\ntc.stepEvaluator.add(() -> tc.browser.getMessage().contains(\"Successfully updated settings\") ,\n\"pop up not displayed after Unchecking toggle\");\ntc.addStepInfo(\"Messsage 'Sucessfuly updated settings' is displayed after any notification option is changed\",\n\"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Schedule button - Schedule screen should be reflected with Tasks, Clipboard, Gantt, Map, Working on Domain options",
        "completion": "tc.browser.start(WebDrv.CHROME, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Task option - Filter, Sorted by : Call Id, Search Task, Split Task list domain, List of notifications option should be reflected",
        "completion": "tc.stepEvaluator.reset();\nWaitFor.condition(() -> tc.button.exists(EButton.ADMIN));\ntc.stepEvaluator\n.add(() -> tc.menu.exists(EMenu.LANGUAGE), \"Language icon is not present\")\n.add(() -> tc.menu.exists(EMenu.SETTINGS), \"Settings icon is not present\")\n.add(() -> tc.button.exists(EButton.CONTACT), \"Contact button is not present\")\n.add(() -> tc.button.exists(EButton.NOTIFICATIONS), \"Notifications button is not present\")\n.add(() -> !tc.browser.getActiveUser(EActions.ICON).isEmpty(), \"user icon is not present\")\n.add(() -> !tc.browser.getActiveUser(EActions.USERNAME).isEmpty(), \"user name is not present\")\n.add(() ->  tc.button.exists(EButton.ADMIN), \"admin icon is not present\");\n\ntc.addStepInfo(\"\"\"\nLanding page top ribbon content is according screenshot and consists of:\n- Contact icon\n- Settings icon\n- Notification bell icon\n- Icon with name shortcut\n- Name of logged in user\n- Admin icon\"\"\",\n\"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Search the Notification<br> - Notification should be appear under the Clipboard tab and assign the notification to the CSE<br>",
        "completion": "tc.stepEvaluator.reset();\nList<String> wantedTiles = Arrays.asList(\"Report an issue with an order or delivery\", \"Question about an order or eSupport assistance\",\n\"Questions about my Account\", \"Request Allocation or Saturday Delivery (SET Request)\", \"Show me all Requests\");\nList<String> actualTiles = tc.tile.getAllTilesName();\nboolean areEqual = wantedTiles.size() == actualTiles.size() &&\nwantedTiles.stream().allMatch(item ->\nCollections.frequency(wantedTiles, item) == Collections.frequency(actualTiles, item));\ntc.addStepInfo(\"\"\"\nLanding page tile content is according screenshot and consists of following tiles:\n- Report an issue with an order or delivery\n- Show me my Requests\n- Question about an order or eSuport assistance\n- Question about my Account\n- Request Allocation or Saturday Delivery (SET Request)\"\"\",\ntrue ,areEqual ,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Actions icon of the @notification - Below options should be reflected for each notification<br>Edit<br>Site Assigned Engineers<br>Show on Gantt<br>Show on Map<br>Add to Clipboard<br>Show related tasks<br>Pin Task<br>Comment<br>Check Rules<br>Get Candidates<br>Schedule<br>Unschedule                                                                                   Relaxed Get Candidates",
        "completion": "tc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Which request would you like to submit?\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened\", true,\ntc.browser.getPageTitle().contains(\"Which request would you like to submit?\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Comment - Comment window should be reflected and user should be able to add the comment",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.SHOW_ME_All_REQUESTS));\ntc.tile.open(ETile.SHOW_ME_All_REQUESTS);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"take a look at your Requests\"));\ntc.addStepInfo(\"Page with dashboard with all requests created by the user is opened\", true,\ntc.browser.getPageTitle().contains(\"take a look at your Tasks\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Launch CAD application and login to the application - Home screen should be reflected",
        "completion": "tc.browser.start(WebDrv.CHROME, ETestData.QA_ENV_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.login(ETestData.FUNCTIONAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen<br>Home, Schedule, Calendar Management, View , Analytics<br>",
        "completion": "tc.tile.open(ETile.QUESTIONS_ABOUT_AN_ORDER);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on View - Below sub options should be reflected<br>Capacity Limitations, Capacity Used Daily, Education Waitlist, Resource Territory, Task , Engineer<br>",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on task option - Task screen should be reflected with Search Bar, Manage Filter, Sorting, Refresh,New,Export buttons and list of notification",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Manage Filters - Filters Management - Task screen should be displayed",
        "completion": "tc.stepEvaluator.reset();\ntc.edit.sendKeys(EEdit.SUBJECT, subject);\ntc.edit.sendKeys(EEdit.REASON, reason);\nWaitFor.specificTime(Duration.ofSeconds(3));\ntc.combo.select(EComboBox.SHS_TEAM, shsTeam);\ntc.edit.sendKeys(EEdit.SOLD_TO, soldTo);\ntc.edit.sendKeys(EEdit.SHIP_TO, shipTo);\ntc.edit.sendKeys(EEdit.PURCHASE_ORDER, purchaseOrder);\ntc.edit.sendKeys(EEdit.ADDITIONAL_EMAIL, emailId);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equalsIgnoreCase(subject), \"subject is not editable\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equalsIgnoreCase(soldTo), \"Sold to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equalsIgnoreCase(shipTo), \"Ship to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PURCHASE_ORDER).equalsIgnoreCase(purchaseOrder), \"purchase order is not editable\")\n.add(() -> tc.edit.getValue(EEdit.ADDITIONAL_EMAIL).equalsIgnoreCase(emailId), \"emailID is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\", tc.stepEvaluator\n.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Add - Task filter 01 * - Conditions folder is created",
        "completion": "tc.edit.sendKeys(EEdit.BROWSE_FILES_INPUT, path);\nString selectedFile = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of each individual file is created in section Attachments\", true,\npath.contains(selectedFile), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Advance Filter - Text Fields is generated like \"Write down the expression to evaluate the condition:\"",
        "completion": "String selectedFile1 = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of file is created in section Attachments\", true,\npath.contains(selectedFile1), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter the expression, Click on Apply and Save - Expression should be Applied and saved",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.browser.getPageTitle().equalsIgnoreCase(\"Almost there! Please check your information.\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - 3. Check your information\",\ntrue, tc.progressBar.getNames().contains(\"Check your Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Launch CAD application and login to the application - CAD application launched and logged in successfully",
        "completion": "tc.notification.performActions(EAction.EDIT);\nWaitFor.condition(()->tc.modal.exists(EModal.MODAL));\nWaitFor.specificTime(Duration.ofSeconds(5));\ntc.stepEvaluator\n.add(()->tc.modal.getTitle().equals(\"Task\"),\"Task Modal is not visible\")\n.add(()->tc.tab.isTabPresent(ETab.ASSIGNMENT),\"'%s' tab is not displayed!\".formatted(ETab.ASSIGNMENT))\n.add(()->tc.tab.isTabPresent(ETab.GENERAL),\"'%s' tab is not displayed!\".formatted(ETab.GENERAL))\n.add(()->tc.tab.isTabPresent(ETab.TIME),\"'%s' tab is not displayed!\".formatted(ETab.TIME))\n.add(()->tc.tab.isTabPresent(ETab.HISTORY),\"'%s' tab is not displayed!\".formatted(ETab.HISTORY));\ntc.addStepInfo(\"Task pop up window should open with below tabs\\n\" +\n\"Assignment, General , Time, History\",\n\"ok\", tc.stepEvaluator.eval() ,new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 5\ntc.tab.select(ETab.ASSIGNMENT);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Assignment Start:\",\"Duration:\",\"Assignment Finish:\",\"Assigned Resource:\")),\n\"Some labels that should be present under assignment tab are not present\");\ntc.addStepInfo(\"Below details should be reflected with Ok, Apply, Cancel buttons Status ,Reschedule Call? ,Assigment Start ,Assigment Finish,Duration , Assigned Resource\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 6\ntc.tab.select(ETab.GENERAL);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Notification:\",\"Notification Task:\", \"Sales Order:\",\n\"DISP Task Short Text:\",\"Delivery Type:\",\"Primary Focus:\")),\n\"Some labels that should be present under general tab are not present\");\ntc.addStepInfo(\"General notification details are reflected and CSE skills can be added\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 7\ntc.tab.select(ETab.LOCATION);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Customer:\",\"Contact Name:\",\n\"Contact Phone:\",\"Contact E-Mail:\",\"Street:\",\"City:\", \"State:\",\"Postcode:\")),\n\"Some labels that should be present under location tab are not present\");\ntc.addStepInfo(\"Location details should be reflected with customer name, Contact and Email\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n\n//STEP 8\ntc.tab.select(ETab.TIME);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"DISP Task Creation Date:\", \"Planned Start:\",\n\"Planned Finish:\")),\n\"Some labels that should be present under time tab are not present\");\ntc.addStepInfo(\"DISP Task Creation Date, Planned Start, Planned Finish options should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 9\ntc.tab.select(ETab.HISTORY);\nWaitFor.specificTime(Duration.ofSeconds(5));\ntc.spinner.waitForSpinner(ESpinner.TABLE_LOADER,Duration.ofSeconds(5));\ntc.spinner.waitForSpinnerToDisappear(ESpinner.TABLE_LOADER,Duration.ofSeconds(10));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.table.getAllColumnNames(ETable.HISTORY).containsAll(List.of(\"Edit Date\",\"Edited By\",\n\"Triggered Action\",\"Status\", \"Rule Violating\",\"In Jeopardy\")),\n\"Columns present under history tab are not present\")\n.add(()->tc.table.getRowsCount(ETable.HISTORY) > 0 ,\"No Data found in History table\");\ntc.addStepInfo(\"Notification history details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n});\n}\n}"
    },
    {
        "prompt": "Launch CAD application and login to the application - CAD application launched and logged in successfully",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.login(ETestData.FUNCTIONAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen<br>Search Field<br>Home<br>Schedule<br>Calendar Management<br>Views<br>Analytics",
        "completion": "tc.tile.open(ETile.QUESTIONS_ABOUT_MY_ACCOUNT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Clik on Calendar Management - Calendars and Resources fields along with that Manage Filters, Sorting, Refresh and New options should be display",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Navigate to Calendars - Name and Base fields should be displayed",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Manage Filters Option - Filters Management - Calendar screen page should be displayed",
        "completion": "tc.stepEvaluator.reset();\ntc.edit.sendKeys(EEdit.SUBJECT, subject);\ntc.edit.sendKeys(EEdit.REASON, reason);\nWaitFor.specificTime(Duration.ofSeconds(1));\ntc.combo.select(EComboBox.SHS_TEAM, shsTeam);\ntc.edit.sendKeys(EEdit.SOLD_TO, soldTo);\ntc.edit.sendKeys(EEdit.SHIP_TO, shipTo);\ntc.edit.sendKeys(EEdit.PURCHASE_ORDER, purchaseOrder);\ntc.edit.sendKeys(EEdit.ADDITIONAL_EMAIL, emailId);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equalsIgnoreCase(subject), \"subject is not editable\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equalsIgnoreCase(soldTo), \"Sold to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equalsIgnoreCase(shipTo), \"Ship to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PURCHASE_ORDER).equalsIgnoreCase(purchaseOrder), \"purchase order is not editable\")\n.add(() -> tc.edit.getValue(EEdit.ADDITIONAL_EMAIL).equalsIgnoreCase(emailId), \"emailID is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\", tc.stepEvaluator\n.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Add - Calendar filter 01 * - Condition should be displayed",
        "completion": "tc.edit.sendKeys(EEdit.BROWSE_FILES_INPUT, path);\nString selectedFile = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of each individual file is created in section Attachments\", true,\npath.contains(selectedFile), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter the Condition by clicking on  Add conditions i.e, \"Select a property field\" like \"Name contains 400\" - Condition should be entered",
        "completion": "String selectedFile1 = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of file is created in section Attachments\", true,\npath.contains(selectedFile1), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Apply and Click on OK - Condition should be applied and saved , Based on Condition the Name and Base list should be displayed",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.browser.getPageTitle().equalsIgnoreCase(\"Almost there! Please check your information.\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - 3. Check your information\",\ntrue, tc.progressBar.getNames().contains(\"Check your Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Launch CAD application and login to the application - Home screen should be reflected",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions()); // edge incognito\ntc.browser.login(ETestData.FUNCTIONAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen",
        "completion": "tc.stepEvaluator.reset();\nWaitFor.condition(() -> !tc.browser.getActiveUser(EActions.USERNAME).isEmpty());\ntc.stepEvaluator\n.add(() -> tc.menu.exists(EMenu.LANGUAGE), \"Language icon is not present\")\n.add(() -> tc.menu.exists(EMenu.SETTINGS), \"Settings icon is not present\")\n.add(() -> tc.button.exists(EButton.CONTACT), \"Contact button is not present\")\n.add(() -> tc.button.exists(EButton.NOTIFICATIONS), \"Notifications button is not present\")\n.add(() -> !tc.browser.getActiveUser(EActions.ICON).isEmpty(), \"user icon is not present\")\n.add(() -> !tc.browser.getActiveUser(EActions.USERNAME).isEmpty(), \"user name is not present\")\n.add(() ->  tc.button.exists(EButton.APP_NAME), \"App icon is not present\");\n\ntc.addStepInfo(\"\"\"\nCheck that page contains top ribbon with:\n- Siemens healthineers Logo\n- My Digital Lab Assistant (vX.X.X)\n- Contact icon\n- Settings icon\n- Notification bell icon\n- Icon with name shortcut\n- Name of logged in user\"\"\",\n\"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Calendar Management - Calendar and Resources section are reflected",
        "completion": "tc.stepEvaluator.reset();\nList<String> wantedTiles = Arrays.asList(\"Report an issue with an order or delivery\", \"Show me my Requests\",\n\"Question about an order or eSupport assistance\", \"Questions about my Account\", \"Request Allocation or Saturday Delivery (SET Request)\");\nList<String> actualTiles = tc.tile.getAllTilesName();\nboolean areEqual = wantedTiles.size() == actualTiles.size() &&\nwantedTiles.stream().allMatch(item ->\nCollections.frequency(wantedTiles, item) == Collections.frequency(actualTiles, item));\ntc.addStepInfo(\"\"\"\nLanding page tile content is according screenshot and consists of following tiles:\n- Report an issue with an order or delivery\n- Show me my Requests\n- Question about an order or eSuport assistance\n- Question about my Account\n- Request Allocation or Saturday Delivery (SET Request)\"\"\",\ntrue ,areEqual , new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Resources - Search Bar, Manage Filter, Sorting, Refresh, New, Export button should be reflected with list of resources calendar schedule",
        "completion": "tc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Which request would you like to submit?\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened\", true,\ntc.browser.getPageTitle().contains(\"Which request would you like to submit?\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on any of the resource item from the list - Resource schedule screen should be reflected",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.SHOW_ME_MY_REQUESTS));\ntc.tile.open(ETile.SHOW_ME_MY_REQUESTS);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"take a look at your Requests\"));\ntc.addStepInfo(\"Page with dashboard with all requests created by the user is opened\", true,\ntc.browser.getPageTitle().contains(\"take a look at your Requests\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Launch CAD application and login to the application - Home screen should be reflected",
        "completion": "tc.notification.performActions(EAction.BOOK_APPOINTMENT);\nWaitFor.condition(() -> tc.button.isDisplayed(EButton.GET_APPOINTMENTS));\ntc.addStepInfo(\"Appointment Booking pop up should be reflected with Get Appointments / close buttons and Appointment \" +\n\"Start date field\", true, tc.button.isDisplayed(EButton.CLOSE) && tc.edit.isDisplayed(EEdit.DATE_TIME_PICKER),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen<br>Home, Schedule, Calendar Management, View , Analytics<br>",
        "completion": "final String t2_date = Generator.getSpecificDate(new DateManipulator().setDay(1), new SimpleDateFormat(\"dd/MM/yyyy hh:mm\"));\ntc.edit.setValue(EEdit.byIndex(0), t2_date);\ntc.combo.select(EComboBox.OPEN_THE_TIME_VIEW, \"11:00 AM\");\ntc.button.click(EButton.GET_APPOINTMENTS);\ntc.spinner.waitForSpinner(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(10), true);\ntc.spinner.waitForSpinnerToDisappear(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(30), true);\ntc.addStepInfo(\"Appointments available for the week should be reflected.\", true, this.isAppointmentVisible(),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on View - Below sub options should be reflected<br>Capacity Limitations, Capacity Used Daily, Education Waitlist, Resource Territory, Task , Engineer<br>",
        "completion": "this.selectAppointment();\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.modal.getTitle().contains(\"Book Slot\"), \"Modal not found!\")\n// TODO: 5/27/2024 can't verify `because byIndex not implemented\n//                    .add(()-> tc.button.isDisplayed(EButton.byIndex(1)), \"Button 'CANCEL' not found!\")\n.add(()-> tc.button.isDisplayed(EButton.BOOK_APPOINTMENT), \"'Book Appointment' button not found!\");\ntc.addStepInfo(\"CSE Slot should be selected and Book Slot window popup should be displayed with Book Appointment and \" +\n\"Cancel button\", \"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on task option - Task screen should be reflected with Search Bar, Manage Filter, Sorting, Refresh,New,Export buttons and list of notification",
        "completion": "tc.button.click(EButton.BOOK_APPOINTMENT);\ntc.spinner.waitForSpinner(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(10), true);\ntc.spinner.waitForSpinnerToDisappear(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(30), true);\ntc.addStepInfo(\"Appointment Details should be reflected.\", true, this.getBookedDetails().contains(\"Appointment Details\"),new ComparerOptions().takeScreenShotPlatform());\n});\n}\n\nprivate boolean isAppointmentVisible()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"form[name='ABSlotsSelect'] table div[class='ng-scope SHS_card']\"), root);// TODO: 5/14/2024 need to add on table implementation\nif(data != null)\n{\nreturn data.isDisplayed();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\nreturn false;\n}\n\nprivate void selectAppointment()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"form[name='ABSlotsSelect'] table div[class='ng-scope SHS_card']\"), root);// TODO: 5/27/2024 need to add on table implementation\nif(data != null)\n{\ndata.click();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\n}\n\nprivate String getBookedDetails()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"div[name='ShowBookingDetails']\"), root);// TODO: 5/27/2024 need to add on table implementation\nif(data != null)\n{\nreturn data.getText();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\nreturn \"\";\n}\n}"
    },
    {
        "prompt": "Launch CAD application and login to the application - Home screen should be reflected",
        "completion": "tc.browser.login(ETestData.DISPATCHER_EDUCATION_ROLE_USER);\ntc.addStepInfo(\"Home screen should be reflected\",\ntrue,\ntc.browser.getCurrentURL().toLowerCase().contains(\"welcome\".toLowerCase()),\nnew ComparerOptions().takeScreenShotPlatform());\n\n// STEP 2\nWaitFor.condition(() -> tc.button.isDisplayed(EButton.NOTIFICATION_BELL));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(() -> tc.button.isDisplayed(EButton.NOTIFICATION_BELL), \"'%s' button is not Displayed!\".formatted(EButton.NOTIFICATION_BELL))\n.add(() -> tc.button.isDisplayed(EButton.SIDE_MENU), \"'%s' button is not Displayed!\".formatted(EButton.SIDE_MENU))\n.add(() -> tc.edit.isDisplayed(EEdit.SERVICE_EDGE_SEARCH), \"'%s' edit box is not Displayed!\".formatted(EEdit.SERVICE_EDGE_SEARCH));\ntc.addStepInfo(\"Menu, Search bar, Notification button should be reflected\",\n\"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 3\ntc.addStepInfo(\"HomeScreen message is present\",\ntrue, tc.browser.getHomeScreenMessage().equals(\"You can start browsing the different views \" +\n\"by clicking the menu button at the top left. This button is always available for quick \" +\n\"navigation between the views. You can also perform a global search for records, objects and\" +\n\" views using the Search field in the blue header.\\n\" + \"\\n\" +\n\"We hope you enjoy this new product! Feedback is always welcome :-)\\n\" +\n\"- The ClickSoftware team\"), new ComparerOptions().takeScreenShotPlatform());\n\n});\n}\n}"
    },
    {
        "prompt": "Click on Schedule button - Schedule screen should be reflected with Tasks, Clipboard, Gantt, Map, Working on Domain options",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.login(ETestData.FUNCTIONAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Task option - Filter, Sorted by : Call Id, Search Task, Split Task list domain, List of notifications option should be reflected",
        "completion": "tc.button.click(EButton.CONTACT);\nWaitFor.condition(tc.modal::exists);\nString modalTitle = \"Contact Support\";\nString modalContent = \"For any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233\";\ntc.stepEvaluator\n.add(() -> tc.modal.getTitle().equalsIgnoreCase(modalTitle), \"modal title not found\")\n.add(() -> tc.modal.getContent().equalsIgnoreCase(modalContent), \"Modal content not found\");\ntc.addStepInfo(\"\"\"\nPopup with following text is displayed:\nContact Support\nFor any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233\nFor reference check attached screenshot\n\"\"\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Search the Notification<br> - Notification should be appear under the Clipboard tab and assign the notification to the CSE.<br>",
        "completion": "tc.button.click(EButton.CLOSE);\ntc.addStepInfo(\"Landing page is displayed\", true, !tc.modal.exists(),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Actions icon of the @notification - Below options should be reflected for each notification<br>Edit<br>Site Assigned Engineers<br>Show on Gantt<br>Show on Map<br>Add to Clipboard<br>Show related tasks<br>Pin Task<br>Comment<br>Check Rules<br>Get Candidates<br>Schedule<br>Unschedule                                                                                   Relaxed Get Candidates",
        "completion": "tc.menu.select(EMenu.LANGUAGE);\ntc.addStepInfo(\"Options English and Deutsch are displayed.\", true, tc.menu.isMenuItemsDisplayed()\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Show related tasks - Task related to the same notification should be reflected",
        "completion": "tc.menu.selectFromDropDown(EMenu.LANGUAGE, \"Deutsch\");\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Willkommen\"));\nboolean isLanguageGM = tc.browser.getPageTitle().contains(\"Willkommen\");\ntc.addStepInfo(\"Landing page is displayed. Language is changed to german language.\", true, isLanguageGM,\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Open Rapid Response by clicking on the URL given above.<br>URL : https://na1.kinaxis.net/web/SIET04_QA002/<br> - Rapid Response will be visible.<br>",
        "completion": "tc.notification.performActions(EAction.BOOK_APPOINTMENT);\nWaitFor.condition(() -> tc.button.isDisplayed(EButton.GET_APPOINTMENTS));\ntc.addStepInfo(\"Appointment Booking pop up should be reflected with Get Appointments / close buttons and Appointment \" +\n\"Start date field\", true, tc.button.isDisplayed(EButton.CLOSE) && tc.edit.isDisplayed(EEdit.DATE_TIME_PICKER),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Create a private scenario using the 'S&OP Candidate' scenario. <br>Open the 'SHS S&OP Demand Planning Ratios' and the 'SHS S&OP Consensus Demand Planning' workbooks. - Able to create a private scenario, and able to open both the workbooks using the newly created scenario.",
        "completion": "final String t2_date = Generator.getSpecificDate(new DateManipulator().setDay(1), new SimpleDateFormat(\"dd/MM/yyyy hh:mm\"));\ntc.edit.setValue(EEdit.byIndex(0), t2_date);\ntc.combo.select(EComboBox.OPEN_THE_TIME_VIEW, \"11:00 AM\");\ntc.button.click(EButton.GET_APPOINTMENTS);\ntc.spinner.waitForSpinner(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(10), true);\ntc.spinner.waitForSpinnerToDisappear(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(30), true);\ntc.addStepInfo(\"Appointments available for the week should be reflected.\", true, this.isAppointmentVisible(),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "In the consensus workbook the following forecast categories contribute 25% to the final forecast numbers.1. Business Line (AT)2. Dmd From SAP3. Spare Parts (CS)<br>4. Business Line (CT)<br>Pick any part and check if the 'Unconstrained Demand Plan' is being created 25% of <br>four forecast streams. - Able to see that for a selected part we can see that each of the forecast streams are contributing 25% each while calculating the 'Unconstrained Demand Plan'.",
        "completion": "this.selectAppointment();\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.modal.getTitle().contains(\"Book Slot\"), \"Modal not found!\")\n// TODO: 5/27/2024 can't verify `because byIndex not implemented\n//                    .add(()-> tc.button.isDisplayed(EButton.byIndex(1)), \"Button 'CANCEL' not found!\")\n.add(()-> tc.button.isDisplayed(EButton.BOOK_APPOINTMENT), \"'Book Appointment' button not found!\");\ntc.addStepInfo(\"CSE Slot should be selected and Book Slot window popup should be displayed with Book Appointment and \" +\n\"Cancel button\", \"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "The planners should open the 'Edit Default Ratios' worksheet using the workbook 'SHS S&OP Demand Planning Ratios.  For the selected part (same part that used in step 3) change override ratio using the SHS S&OP Demand Planning Ratios workbook as shown. Save the changes.<br> - Able to change the ratios",
        "completion": "tc.button.click(EButton.BOOK_APPOINTMENT);\ntc.spinner.waitForSpinner(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(10), true);\ntc.spinner.waitForSpinnerToDisappear(ESpinner.FA_FA_SPINNER, Duration.ofSeconds(30), true);\ntc.addStepInfo(\"Appointment Details should be reflected.\", true, this.getBookedDetails().contains(\"Appointment Details\"),new ComparerOptions().takeScreenShotPlatform());\n});\n}\n\nprivate boolean isAppointmentVisible()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"form[name='ABSlotsSelect'] table div[class='ng-scope SHS_card']\"), root);// TODO: 5/14/2024 need to add on table implementation\nif(data != null)\n{\nreturn data.isDisplayed();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\nreturn false;\n}\n\nprivate void selectAppointment()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"form[name='ABSlotsSelect'] table div[class='ng-scope SHS_card']\"), root);// TODO: 5/27/2024 need to add on table implementation\nif(data != null)\n{\ndata.click();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\n}\n\nprivate String getBookedDetails()\n{\ntry\n{\nCoreCssControl css = CoreIocBuilder.getContainer().getComponent(CoreCssControl.class);\nWebElement root = DomUtils.setRootElement(ModalControl.getSelector());\nWebElement data = css.findControlWithRoot(By.cssSelector(\"div[name='ShowBookingDetails']\"), root);// TODO: 5/27/2024 need to add on table implementation\nif(data != null)\n{\nreturn data.getText();\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Failed to get Dates.\");\n}\nreturn \"\";\n}\n}"
    },
    {
        "prompt": "Click on Schedule button - Schedule screen should be reflected with Tasks, Clipboard, Gantt, Map, Working on Domain options",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.login(ETestData.FUNCTIONAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", \"Landing page is Displayed\", tc.button.exists(EButton.CONTACT) ?\n\"Landing page is Displayed\" : \"Landing page is not Displayed\", new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Clipboard option - Filter,Sorted by : Call Id, Search Task, Split Task list domain, List of notifications option should be reflected",
        "completion": "tc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Actions icon of confirmed status of the @notification - Below options should be reflected for each notification<br>Edit                                                                                           <br>Change Status<br>Show on Gantt<br>Show on Map<br>Remove to Clipboard<br>Pin Task<br>Comment<br>Check Rules<br>Get Candidates<br>Schedule<br>Unschedule",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Pin task - The task selected should be pinned",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Launch CAD application and login to the application - CAD application launched and logged in successfully",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", \"Landing page is Displayed\", tc.button.exists(EButton.CONTACT) ?\n\"Landing page is Displayed\" : \"Landing page is not Displayed\", new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen<br>Search Field<br>Home<br>Schedule<br>Calendar Management<br>Views<br>Analytics",
        "completion": "tc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on View Option - Views options should contains the following suboptions like:<br>Capacity Limitations<br>Capacity Used Daily<br>Education Waitlist<br>Resource Territory<br>Task<br>Engineer",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Navigate to Education Waitlist suboption - Education WaitList screen should be displayed",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Check the availablity of  Manage Filter, Sorting, Refresh , Duplicate ,Delete New and Export options - Manage filter, sorting,  refresh, Delete,New , Export option should be  displayed",
        "completion": "tc.stepEvaluator.reset();\ntc.edit.sendKeys(EEdit.SUBJECT, subject);\ntc.edit.sendKeys(EEdit.REASON, reason);\nWaitFor.specificTime(Duration.ofSeconds(1));\ntc.combo.select(EComboBox.CLASSIFICATIONS, classification);\nWaitFor.specificTime(Duration.ofSeconds(1));\ntc.combo.select(EComboBox.SHS_TEAM, shsTeam);\ntc.edit.sendKeys(EEdit.SOLD_TO, soldTo);\ntc.edit.sendKeys(EEdit.SHIP_TO, shipTo);\ntc.edit.sendKeys(EEdit.PURCHASE_ORDER, purchaseOrder);\ntc.edit.sendKeys(EEdit.ADDITIONAL_EMAIL, emailId);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equalsIgnoreCase(subject), \"subject is not editable\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equalsIgnoreCase(soldTo), \"Sold to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equalsIgnoreCase(shipTo), \"Ship to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PURCHASE_ORDER).equalsIgnoreCase(purchaseOrder), \"purchase order is not editable\")\n.add(() -> tc.edit.getValue(EEdit.ADDITIONAL_EMAIL).equalsIgnoreCase(emailId), \"emailID is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\", tc.stepEvaluator\n.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Check whether Education Waitlist contains fields like Priority Ranking, Notification Number, Sales Order, FL#, Requested Training Start Date, Customer Contact Date, Perferred CSE, Customer Name, City, State - Education Waitlist should contains fields like Priority Ranking, Notification Number, Sales Order, FL#, Requested Training Start Date, Customer Contact Date, Perferred CSE, Customer Name, City, State",
        "completion": "tc.edit.sendKeys(EEdit.BROWSE_FILES_INPUT, path);\nString selectedFile = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of each individual file is created in section Attachments\", true,\npath.contains(selectedFile), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on any one of the Notification Number from the List - Notification details should be displayed",
        "completion": "String selectedFile1 = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of file is created in section Attachments\", true,\npath.contains(selectedFile1), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on duplicate - Another copy of same notification should be created",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.browser.getPageTitle().equalsIgnoreCase(\"Almost there! Please check your information.\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - 3. Check your information\",\ntrue, tc.progressBar.getNames().contains(\"Check your Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Apply and Click on OK - Duplicate copy is created and saved",
        "completion": "tc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equals(subject), \"subject is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equals(reason), \"reason is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equals(soldTo), \"Sold to is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equals(shipTo), \"Ship to is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equals(number), \"Mobile is is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equals(language), \"language is not same as entered value\");\ntc.addStepInfo(\"Values of the fields are the same as were entered in step 3 and 5\", \"ok\",\ntc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "To validate the Duplicate copy, go to view - Duplicate copy of the same notification should be displayed",
        "completion": "tc.stepEvaluator.reset();\ntc.checkBox.check(ECheckBox.INFORMATION_ONLY);\ntc.stepEvaluator\n.add(() -> !tc.checkBox.isDisabled(ECheckBox.REFER_OUT_REQUEST_AFTER_SUBMISSION), \"check box is not disabled\")\n.add(() -> tc.checkBox.isChecked(ECheckBox.INFORMATION_ONLY), \"check box is not checked\");\ntc.addStepInfo(\"\"\"\nCheckboxes can be checked.\nWhen one of checkboxes \"Informational Only\" or \"Refer Out Request adter Submission\"\nis checked the other is greyed out and impossible to check\n\"\"\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select any one of the notification in checkbox, Click on Delete - window Popup message should be displayed as \"<br>Are you sure you want to delete the selected EducationWaitlist records?\" with Delete and Cancel button",
        "completion": "tc.button.click(EButton.SAVE_PLUS_SUBMIT);\nWaitFor.condition(tc.modal::exists);\nString modalTitle1 = tc.modal.getTitle();\nString modalContent1 = tc.modal.getContent();\nboolean isModalPopped = modalTitle1.equalsIgnoreCase(\"Save & Submit request\") && modalContent1\n.equalsIgnoreCase(\"Are you sure you want to submit this request? You will not be able to make any changes after submission.\");\ntc.addStepInfo(\"\"\"\nPopup with following text is diplayed:\nSave & Submit Request\nAre you sure you want to submit this request? You will not be able to make any changes after submission\n\"\"\", true, isModalPopped, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Delete - Selected Notification should be deleted",
        "completion": "tc.button.click(EButton.YES_SUBMIT);\nWaitFor.specificTime(Duration.ofSeconds(3));\nWaitFor.condition(tc.modal::exists, Duration.ofSeconds(40));\nString modalTitle2 = tc.modal.getTitle();\nboolean isModalPopped2 = modalTitle2.contains(\"Congratulations\");\ntc.addStepInfo(\"popup with following test is diplayed:\" +\n\"Congratulations! Your issue has been reported.\", true, isModalPopped2, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Schedule button - Schedule screen should be reflected with Tasks, Clipboard, Gantt, Map, Working on Domain options",
        "completion": "WebDrv drv = WebDrv.EDGE;\nUUID internalUser = tc.browser.start(drv, ETestData.QA_ENV_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.login(ETestData.FUNCTIONAL_USER);\nWaitFor.condition(() -> tc.button.exists(EButton.CONTACT));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Task option - Filter,Sorted by : Call Id, Search Task, Split Task list domain, List of notifications option should be reflected",
        "completion": "WaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Search the Notification<br> - Notification should be appear under the Clipboard tab and assign the notification to the CSE<br>",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Actions icon of the @notification - Below options should be reflected for each notification<br>Edit<br>Site Assigned Engineers                                                          Change Status<br>Show on Gantt<br>Show on Map<br>Remove from Clipboard<br>Pin Task<br>Comment<br>Check Rules<br>Get Candidates<br>Schedule<br>Unschedule                                                                                   Relaxed Get Candidates",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Comment - Comment window should be reflected and user should be able to add the comment",
        "completion": "tc.stepEvaluator.reset();\ntc.edit.sendKeys(EEdit.SUBJECT, subject);\ntc.edit.sendKeys(EEdit.REASON, reason);\nWaitFor.specificTime(Duration.ofSeconds(1));\ntc.combo.select(EComboBox.SHS_TEAM, shsTeam);\ntc.edit.sendKeys(EEdit.SOLD_TO, soldTo);\ntc.edit.sendKeys(EEdit.SHIP_TO, shipTo);\ntc.edit.sendKeys(EEdit.PURCHASE_ORDER, purchaseOrder);\ntc.edit.sendKeys(EEdit.ADDITIONAL_EMAIL, emailId);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equalsIgnoreCase(subject), \"subject is not editable\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equalsIgnoreCase(soldTo), \"Sold to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equalsIgnoreCase(shipTo), \"Ship to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PURCHASE_ORDER).equalsIgnoreCase(purchaseOrder), \"purchase order is not editable\")\n.add(() -> tc.edit.getValue(EEdit.ADDITIONAL_EMAIL).equalsIgnoreCase(emailId), \"emailID is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\", tc.stepEvaluator\n.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Schedule button - Schedule screen should be reflected with Tasks, Clipboard, Gantt, Map, Working on Domain options",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_WEBS_SHOP_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.externalUserLogin(ETestData.EXTERNAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.tile.exists(ETile.REPORT_AN_ISSUE),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Clipboard option - Filter,Sorted by : Call Id, Search Task, Split Task list domain, List of notifications option should be reflected",
        "completion": "tc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Actions icon for any one of the @notification - Below options should be reflected for each notification<br>Edit                                                                                           <br>Change Status<br>Show on Gantt<br>Show on Map<br>Remove to Clipboard<br>Pin Task<br>Comment<br>Check Rules<br>Get Candidates<br>Schedule<br>Unschedule",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Change Status - Depending on Notification status should be reflected like Open, Open-Waitlist, Confirmed,Dispatched",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Schedule button - Schedule screen should be reflected with Tasks, Clipboard, Gantt, Map, Working on Domain options",
        "completion": "tc.button.click(EButton.CANCEL);\nWaitFor.condition(() -> tc.button.exists(EButton.GO));\ntc.button.click(EButton.GO);\nWaitFor.condition(()-> tc.combo.exists(EComboBox.SELECT_A_QMS));\ntc.combo.select(EComboBox.SELECT_A_QMS, \"LD_POC\");\ntc.button.click(EButton.CANCEL);\ntc.stepEvaluator.add(tc.modal::exists, \"Modal didn't popped up\")\n.add(() -> tc.button.exists(EButton.CANCEL), \"Cancel button not found\")\n.add(() -> tc.button.exists(EButton.OK), \"OK button not found\");\ntc.addStepInfo(\"'You are about to discard your unsaved changes.' alert message popup should be displayed \" +\n\"with OK and Cancel button\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Clipboard option - Filter,Sorted by : Call Id, Search Task, Split Task list domain, List of notifications option should be reflected",
        "completion": "tc.button.click(EButton.OK);\nWaitFor.condition(() -> !tc.modal.exists());\ntc.addStepInfo(\"Popup message should be closed\", true, !tc.modal.exists(),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Actions icon of Confirmed status of the @notification - Below options should be reflected for each notification<br>Edit                                                                                           <br>Change Status<br>Show on Gantt<br>Show on Map<br>Remove to Clipboard<br>Pin Task<br>Comment<br>Check Rules<br>Get Candidates<br>Schedule<br>Unschedule",
        "completion": "tc.button.click(EButton.GO);\nWaitFor.condition(()-> tc.combo.exists(EComboBox.SELECT_A_QMS));\ntc.combo.select(EComboBox.SELECT_A_QMS, \"LD_POC\");\ntc.button.click(EButton.CANCEL);\nWaitFor.condition(tc.modal::exists);\ntc.modal.closeModalByTitle(EModal.UNSAVED_CHANGES);\ntc.addStepInfo(\"Popup message should be closed\", true, !tc.button.exists(EButton.OK),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Check Rules - Rule Violations Check popup window should be displayed",
        "completion": "tc.button.click(EButton.CANCEL);\nWaitFor.condition(tc.modal::exists);\ntc.button.click(tc.button.exists(EButton.OK) ? EButton.OK : EButton.DISCARD);\ntc.addStepInfo(\"Popup message should be closed\", true, !tc.button.exists(EButton.OK),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Log in to Digital Customer Portal - Landing page is displayed",
        "completion": "tc.button.click(EButton.CANCEL);\nWaitFor.condition(() -> tc.button.exists(EButton.GO));\ntc.button.click(EButton.GO);\nWaitFor.condition(()-> tc.combo.exists(EComboBox.SELECT_A_QMS));\ntc.combo.select(EComboBox.SELECT_A_QMS, \"LD_POC\");\ntc.button.click(EButton.CANCEL);\ntc.stepEvaluator.add(tc.modal::exists, \"Modal didn't popped up\")\n.add(() -> tc.button.exists(EButton.CANCEL), \"Cancel button not found\")\n.add(() -> tc.button.exists(EButton.OK), \"OK button not found\");\ntc.addStepInfo(\"'You are about to discard your unsaved changes.' alert message popup should be displayed \" +\n\"with OK and Cancel button\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "<br>Click on tile \"Report an issue with an order or delivery\"<br> - Page with details for reporting an issue is opened - Part 1. Personal information",
        "completion": "tc.button.click(EButton.OK);\nWaitFor.condition(() -> !tc.modal.exists());\ntc.addStepInfo(\"Popup message should be closed\", true, !tc.modal.exists(),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter data in to following fields:- Name - name of logged user, not possible to modify<br>- E-Mail - email of logged user, not possible to modify<br>- Mobile<br>- Country<br>- State<br>- Preferred language<br><br>For reference check attached screenshot - User is able to enter information in specified fields",
        "completion": "tc.button.click(EButton.GO);\nWaitFor.condition(()-> tc.combo.exists(EComboBox.SELECT_A_QMS));\ntc.combo.select(EComboBox.SELECT_A_QMS, \"LD_POC\");\ntc.button.click(EButton.CANCEL);\nWaitFor.condition(tc.modal::exists);\ntc.modal.closeModalByTitle(EModal.UNSAVED_CHANGES);\ntc.addStepInfo(\"Popup message should be closed\", true, !tc.button.exists(EButton.OK),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Next\" button - Page with details for reporting an issue is opened - Part 2. Request information",
        "completion": "tc.button.click(EButton.CANCEL);\nWaitFor.condition(tc.modal::exists);\ntc.button.click(tc.button.exists(EButton.OK) ? EButton.OK : EButton.DISCARD);\ntc.addStepInfo(\"Popup message should be closed\", true, !tc.button.exists(EButton.OK),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter data in to following fields:- Request type - Possible to select one from the list(\"Order Issue\", \"Question about Account\", \"Invoice inquiry\", \"Question about Order\")<br>- Subject<br>- Reason<br>- Classification<br>- Siemens Healthineers Team<br>- Sold To<br>- Ship to<br>- Puchase Order or Order Number - add multiple entries by clicking on \"+ Add Order Number\"<br>- Additional E-Mail - add multiple entries by clicking on \"+ Add E-Mail\"<br><br>For reference check attached screenshot - User is able to enter information in specified fields",
        "completion": "WaitFor.condition(() -> tc.button.exists(EButton.GO));\ntc.button.click(EButton.GO);\nWaitFor.condition(() -> tc.combo.exists(EComboBox.SELECT_A_QMS));\ntc.combo.select(EComboBox.SELECT_A_QMS, \"LD_POC\");\ntc.button.click(EButton.SAVE);\nWaitFor.condition(() -> tc.button.exists(EButton.SAVE));\ntc.addStepInfo(\"QMS is saved\", true, tc.button.exists(EButton.SAVE), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "In section Attachments click on icon \"Browse files\", select files that will be attached to this issue and click \"Open\" - Icon with name of each individual file is created in section Attachments",
        "completion": "tc.button.click(EButton.SUBMIT);\nWaitFor.condition(() -> tc.button.exists(EButton.SUPPLIER_ID));\ntc.addStepInfo(\"QMS is submitted successfully\", true, tc.edit.exists(EEdit.SUPPLIER_ID),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Drag and drop file from your computer in to section Attachments - Icon with name of file is created in section Attachments",
        "completion": "tc.edit.sendKeys(EEdit.SUPPLIER_ID, supplierID);\ntc.button.click(EButton.SEARCH_FOR_SUPPLIERS);\nWaitFor.condition(() -> tc.table.getValuesFromRow(ETable.byIndex(0), 0).contains(supplierID));\nString id = tc.table.getValuesFromRow(ETable.byIndex(0), 0).get(4);\ntc.addStepInfo(\"A list of suppliers is shown on the click of 'Search for Suppliers'\", supplierID, id, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Next\" button - Page with details for reporting an issue is opened - 3. Check your information",
        "completion": "tc.button.click(EButton.CLEAR_SEARCH_CRITERIA);\nWaitFor.condition(() -> !tc.edit.getText(EEdit.SUPPLIER_ID).equals(supplierID));\ntc.addStepInfo(\"All fields will reset\", true, !tc.edit.getText(EEdit.SUPPLIER_ID).equalsIgnoreCase(supplierID),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Verify that the content of fields on the screenFor reference check attached screenshot - Values of the fields are the same as were entered in step 3 and 5",
        "completion": "tc.button.click(EButton.CANCEL);\nWaitFor.condition(() -> tc.button.exists(EButton.GO));\ntc.addStepInfo(\"Upload documents screen will be closed without saving anything\", true,\ntc.button.exists(EButton.GO), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Check the checkbox \"Mark as urgent\" - Checkboxes can be checked.<br><br>",
        "completion": "tc.button.click(EButton.GO);\nWaitFor.condition(() -> tc.button.exists(EButton.SUPPLIER_ID));\ntc.edit.sendKeys(EEdit.SUPPLIER_ID, supplierID);\ntc.button.click(EButton.SEARCH_FOR_SUPPLIERS);\nWaitFor.condition(() -> tc.table.getValuesFromRow(ETable.byIndex(0), 0).contains(supplierID));\ntc.table.selectCheckBox(ETable.byIndex(0), EColumn.SELECT, 0);\ntc.button.click(EButton.CONTINUE);\nWaitFor.condition(() -> tc.browser.getPageHeaders().contains(\"Upload Documents\"));\ntc.addStepInfo(\"Supplier is selected and 'Upload document' screen opened on the click of Continue\", true, tc.browser.getPageHeaders()\n.contains(\"Upload Documents\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Save + Submit\" button - Popup with following text is diplayed:Save & Submit Request<br>Are you sure you want to submit this request? You will not be able to make any changes after submission<br><br>For reference check attached screenshot",
        "completion": "WaitFor.condition(() -> tc.button.exists(EButton.ACTIONS));\ntc.button.click(EButton.ACTIONS);\nWaitFor.specificTime(Duration.ofMillis(2000));\ntc.addStepInfo(\"On Click of actions, dropdown list will display\", true, tc.button.isDropDownItemPresent(EButton.ACTIONS, EDropDown.REFRESH)\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Yes, submit\" button - Popup with following test is diplayed:Congratulations! Your issue has been reported.<br><br>For reference check attached screenshot<br>",
        "completion": "boolean isComboOptionsPresent = tc.combo.getAvailableOptions(EComboBox.DOCUMENT_CATEGORY).isEmpty();\ntc.addStepInfo(\"On Click of document category, dropdown list will display\", true, !isComboOptionsPresent,\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Go back to the dashboard\" button - Landing page is displayed",
        "completion": "tc.button.click(EButton.CANCEL);\nWaitFor.condition(() -> tc.button.exists(EButton.GO));\ntc.addStepInfo(\"Upload documents screen will be closed\", true, tc.button.exists(EButton.GO),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Verify that notification was not sent to email addresses menitoned in fields E-Mail and Additional E-Mail . For reference check attached screenshot . - Notification email was not received by email addresses menitoned in fields E-Mail and Additional E-Mail",
        "completion": "tc.button.click(EButton.GO);\nWaitFor.condition(() -> tc.combo.exists(EComboBox.DOCUMENT_CATEGORY));\ntc.combo.select(EComboBox.DOCUMENT_CATEGORY, \"Basic Information\");\nWaitFor.condition(() -> tc.button.exists(EButton.ADD));\ntc.button.click(EButton.ADD);\nWaitFor.condition(() -> tc.edit.exists(EEdit.DOCUMENT_TITLE));\ntc.addStepInfo(\"Fields to specify for 'Basic Supplier Information' will appear\", true,\ntc.edit.exists(EEdit.DOCUMENT_TITLE), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile \"Show me my Requests\" - Page with dashboard with all requests created by the user is opened on tab My Dashboard . For reference check attached screenshot .",
        "completion": "tc.button.click(EButton.REMOVE_DOCUMENT);\nWaitFor.condition(() -> !tc.edit.exists(EEdit.DOCUMENT_TITLE));\ntc.addStepInfo(\"Uploaded files should be removed\", true,\n!tc.edit.exists(EEdit.DOCUMENT_TITLE), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tab \"Created Requests\" - Page with list of all requests created by the user is opened on tab My Dashboard For reference check attached screenshot<br>",
        "completion": "tc.combo.select(EComboBox.DOCUMENT_CATEGORY, \"Basic Information\");\nWaitFor.condition(() -> tc.button.exists(EButton.ADD));\ntc.button.click(EButton.ADD);\nWaitFor.condition(() -> tc.edit.exists(EEdit.DOCUMENT_TITLE));\ntc.addStepInfo(\"Fields to specify for 'Basic Supplier Information' will appear\", true,\ntc.edit.exists(EEdit.DOCUMENT_TITLE), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter request ID or part of Subject in to search field - Only requests matching search conditions are displayed",
        "completion": "tc.button.click(EButton.UPLOAD_FILE);\nWaitFor.condition(tc.modal::exists);\nWaitFor.specificTime(Duration.ofSeconds(3));\ntc.button.click(EButton.CANCEL);\ntc.addStepInfo(\"Attach files popup window displayed and closed on click of 'Cancel'\", true,\n!tc.button.exists(EButton.ATTACH), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on filtered request - Request detail page is opened on Comment tabFor reference check attached screenshot<br>",
        "completion": "tc.button.click(EButton.UPLOAD_FILE);\nWaitFor.condition(tc.modal::exists);\nWaitFor.specificTime(Duration.ofSeconds(3));\ntc.button.click(EButton.CANCEL);\ntc.addStepInfo(\"Attach files popup window displayed and closed on click of 'X' icon\", true,\n!tc.button.exists(EButton.ATTACH), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Verify content of fields on the screenFor reference check attached screenshot<br> - Reason from step 5 is used as 1st comment",
        "completion": "tc.button.click(EButton.UPLOAD_FILE);\nWaitFor.condition(tc.modal::exists);\nWaitFor.specificTime(Duration.ofSeconds(3));\ntc.button.sendKeys(EButton.SELECT_FILES, String.valueOf(DirectoryControl.getPathOfTestFile(attached_file)));\nWaitFor.condition(() -> tc.table.getItemsFromColumn(ETable.byIndex(0), EColumn.byIndex(1)).contains(attached_file),\nDuration.ofSeconds(7));\ntc.button.click(EButton.ATTACH);\nWaitFor.condition(() -> !tc.node.getValues(ENode.ATTACHMENTS).isEmpty());\nList<String> attachedFile = tc.node.getValues(ENode.ATTACHMENTS);\ntc.addStepInfo(\"Select files window will display and files will be attached on click of 'Attach'\", true,\nattachedFile.contains(\"SLIM_TEST\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter text, add attachment and submit new comment by clicking \">\" icon - New comment is added",
        "completion": "tc.button.click(EButton.SAVE);\nWaitFor.specificTime(Duration.ofSeconds(5));\ntc.browser.refresh();\nWaitFor.condition(() -> tc.button.exists(EButton.GO), Duration.ofMinutes(2));\ntc.addStepInfo(\"Changes should be saved\", true, tc.button.exists(EButton.GO), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select tab \"Request Information\" and verify content of fields on the screenFor reference check attached screenshot<br> - Values of the fields are the same as were entered in step 3 and 5",
        "completion": "tc.button.click(EButton.GO);\nWaitFor.condition(() -> tc.button.exists(EButton.SUBMIT));\ntc.button.click(EButton.SUBMIT);\nWaitFor.condition(() -> tc.node.getValues(ENode.CASE_DETAILS).contains(\"CREATING RECORDS\"));\ntc.addStepInfo(\"Upload documents submitted successfully\", true, tc.node.getValues(ENode.CASE_DETAILS).contains(\"CREATING RECORDS\")\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select tab \"Requestor Information\" and verify content of fields on the screenFor reference check attached screenshot<br> - Values of the fields are the same as were entered in step 3 and 5",
        "completion": "tc.menu.selectWithOutExpand(EMenu.SUPPLIER);\ntc.button.click(EButton.SHOW_360_DREGEE_VIEW);\nWaitFor.specificTime(Duration.ofSeconds(4));\ntc.browser.switchToWindow(1);\nWaitFor.condition(()->tc.browser.getTitleOfActiveWindow().contains(\"Supplier360ViewDetails\"), Duration.ofSeconds(10));\ntc.addStepInfo(\"360\u00b0 View should be opened\", true, tc.browser.getTitleOfActiveWindow().\ncontains(\"Supplier360ViewDetails\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select tab \"Request Overview\" and verify content of fields on the screenFor reference check attached screenshot<br> - Values of the fields are the same as were entered in step 3 and 5",
        "completion": "tc.browser.switchToWindow(0);\ntc.menu.select(EMenu.CREATE, EMenu.UPLOAD_DOCUMENTS);\nWaitFor.condition(() -> tc.combo.exists(EComboBox.SELECT_A_QMS));\ntc.addStepInfo(\"upload documents screen opened\", true, tc.combo.exists(EComboBox.SELECT_A_QMS),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on button \"Back\" - Page with dashboard with all requests created by the user is opened on tab My Dashboard",
        "completion": "tc.button.selectDropDownItem(EButton.ACTIONS, EDropDown.CANCEL_CASE);\nWaitFor.condition(() -> tc.editor.exists(EEditor.CANCELLATION_COMMENTS));\ntc.addStepInfo(\"Cancel case screen is displayed\", true, tc.editor.exists(EEditor.CANCELLATION_COMMENTS),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tab \"Created Requests\" and click on your request created in previous steps - Request detail page is opened on Comment tabFor reference check attached screenshot<br>",
        "completion": "tc.button.click(EButton.CANCEL);\nWaitFor.condition(() -> tc.button.exists(EButton.GO));\ntc.addStepInfo(\"Cancel case screen closed without saving\", true, tc.button.exists(EButton.GO),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select tab \"Request Information\" and click on the button \"Delete\" - Popup with following text is diplayed:Delete Request<br>Request will be removed from your list of saved requests.<br><br>For reference check attached screenshot",
        "completion": "tc.button.click(EButton.GO);\nWaitFor.condition(() -> tc.button.exists(EButton.ACTIONS));\ntc.button.selectDropDownItem(EButton.ACTIONS, EDropDown.CANCEL_CASE);\nWaitFor.condition(() -> tc.editor.exists(EEditor.CANCELLATION_COMMENTS));\ntc.addStepInfo(\"Cancellation comment is saved\", true, tc.editor.exists(EEditor.CANCELLATION_COMMENTS),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Confirm\" button - Notification about successful operation is displayed on the bottom of the screen. User is redirecrted to Landing page",
        "completion": "tc.editor.sendKeys(EEditor.CANCELLATION_COMMENTS, \"Comment_Cancel\");\ntc.button.click(EButton.SUBMIT);\nWaitFor.condition(() -> tc.node.getValues(ENode.CASE_DETAILS).contains(\"RESOLVED-CANCELLED\"));\ntc.addStepInfo(\"UD case is cancelled\", true, tc.node.getValues(ENode.CASE_DETAILS).contains(\"RESOLVED-CANCELLED\"),\nnew ComparerOptions().takeScreenShotPlatform());\n});\n}\n}"
    },
    {
        "prompt": "URL: https://na1.kinaxis.net/web/siet04_ga002/saml2<br>Open Rapid Response by clicking on the URL given<br>above. - Rapid Response window will open.<br>",
        "completion": "tc.notification.performActions(EAction.EDIT);\nWaitFor.condition(()->tc.modal.exists(EModal.MODAL));\nWaitFor.specificTime(Duration.ofSeconds(5));\ntc.addStepInfo(\"Task pop up window should open with below tabs\\n\" +\n\"Assignment, General , Bundling, Comments, Time, Customer , Location , Resource, Dependencies, Notes , Functional Location , History\",\ntrue,tc.modal.getTitle().equals(\"Task\"),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 6\ntc.tab.select(ETab.ASSIGNMENT);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Assignment Start:\",\"Duration:\",\"Assignment Finish:\",\"Assigned Resource:\")),\n\"Some labels that should be present under assignment tab are not present\");\ntc.addStepInfo(\"Below details should be reflected with Ok, Apply, Cancel buttons : Assigment Start ,Duration ,Assigment Finish ,Assigned Resource\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 7\ntc.tab.select(ETab.GENERAL);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Notification:\",\"Notification Task:\",\n\"DISP Task Short Text:\",\"TRP:\",\"Task Type:\",\"SAP Priority:\",\"Priority:\",\"Calendar:\",\"Status:\",\n\"Duration:\",\"Short Text:\",\"In Jeopardy:\",\"Effect Code:\")),\n\"Some labels that should be present under general tab are not present\");\ntc.addStepInfo(\"General notification details are reflected and CSE skills can be added\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 8\ntc.tab.select(ETab.COMMENTS);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"DISP Task Short Text:\",\"Status:\",\n\"Next Action Date:\")),\n\"Some labels that should be present under comments tab are not present\");\ntc.addStepInfo(\"Any comments added present in SAP is reflected here with ETA cancellation \" +\n\"details and Site Assigned Engineers details\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 9\ntc.tab.select(ETab.TIME);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Early Start:\",\"Due Date:\",\n\"DISP Task Creation Date:\",\"Appointment Start:\",\"Appointment Finish:\",\"Dispatch Date:\",\n\"Notification Creation Date:\",\"Additional Travel:\",\"Schedule Date:\",\"Time Zone:\")),\n\"Some labels that should be present under time tab are not present\");\ntc.addStepInfo(\"Early start and due date , Appointment date and time All date and time, \" +\n\"Schedule details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 10\ntc.tab.select(ETab.CUSTOMER);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Customer:\", \"Contact Name:\", \"Contact Phone:\", \"Contact Phone Extension:\",\n\"Contact E-Mail:\", \"Contract ID:\", \"Contract Line:\", \"Contract Description:\", \"Customer Addresses:\")),\n\"Some labels that should be present under customer tab are not present\");\ntc.addStepInfo(\"Customer Details and Contract details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 11\ntc.tab.select(ETab.LOCATION);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Latitude:\",\"Longitude:\",\n\"Region:\",\"District:\",\"Street:\",\"City:\", \"State:\",\"Postal code:\")),\n\"Some labels that should be present under location tab are not present\");\ntc.addStepInfo(\"Location latitude and longitude details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 12\ntc.tab.select(ETab.RESOURCES);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Additional Resources:\",\"Secondary Resources:\",\n\"Required Resources:\",\"Preferred Resources:\")),\n\"Some labels that should be present under resources tab are not present\");\ntc.addStepInfo(\"Primary, Secondary,Required , Additional resources details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 13\ntc.tab.select(ETab.DEPENDENCIES);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().contains(\"Critical:\"),\n\"Some labels that should be present under dependencies tab are not present\");\ntc.addStepInfo(\"Time dependencies and Resource dependencies option should be reflected and user should be able to add the same\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 14\ntc.tab.select(ETab.NOTES);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"Site Message(s):\",\"Notification Long Text:\", \"DISP Task Long Text:\")),\n\"Some labels that should be present under notes tab are not present\");\ntc.addStepInfo(\"Any messages like Site messages, long text should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 15\ntc.tab.select(ETab.FUNCTIONAL_LOCATION);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.edit.getAllLabelNames().containsAll(List.of(\"FL Description:\",\"Functional Location:\",\n\"Equipment Description:\",\"Equipment:\",\"Sales Area:\",\"Distribution Channel:\", \"Division:\",\"Family Description:\")),\n\"Some labels that should be present under functional location tab are not present\");\ntc.addStepInfo(\"FL details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n\n//STEP 16\ntc.button.click(EButton.ARROW_RIGHT);\nWaitFor.specificTime(Duration.ofSeconds(3));\ntc.tab.select(ETab.HISTORY);\nWaitFor.specificTime(Duration.ofSeconds(5));\ntc.spinner.waitForSpinner(ESpinner.TABLE_LOADER,Duration.ofSeconds(5));\ntc.spinner.waitForSpinnerToDisappear(ESpinner.TABLE_LOADER,Duration.ofSeconds(10));\ntc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(()-> tc.button.isDisplayed(EButton.OK), \"'%s' button is not displayed!\".formatted(EButton.OK))\n.add(()-> tc.button.isDisplayed(EButton.APPLY), \"'%s' button is not displayed!\".formatted(EButton.APPLY))\n.add(()-> tc.button.isDisplayed(EButton.CANCEL), \"'%s' button is not displayed!\".formatted(EButton.CANCEL))\n.add(()->tc.table.getAllColumnNames(ETable.HISTORY).containsAll(List.of(\"Edit Date\",\"Edited By\",\n\"Triggered Action\",\"Status\", \"Rule Violating\",\"In Jeopardy\")),\n\"Columns present under history tab are not present\")\n.add(()->tc.table.getRowsCount(ETable.HISTORY) > 0 ,\"No Data found in History table\");\ntc.addStepInfo(\"Notification history details should be reflected\" ,\n\"ok\", tc.stepEvaluator.eval(),new ComparerOptions().takeScreenShotPlatform());\n});\n}\n}"
    },
    {
        "prompt": "Launch CAD application and login to the application - CAD application launched and logged in successfully",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_WEBS_SHOP_URL, new CoreStartOptions().startIncognito(), new CoreStartOptions());\ntc.browser.externalUserLogin(ETestData.EXTERNAL_USER);\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.tile.exists(ETile.REPORT_AN_ISSUE),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen<br>Search Field<br>Home<br>Schedule<br>Calendar Management<br>Views<br>Analytics",
        "completion": "tc.tile.open(ETile.QUESTIONS_ABOUT_AN_ORDER);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on View Option - Views options should contains the following suboptions like:<br>Capacity Limitations<br>Capacity Used Daily<br>Education Waitlist<br>Resource Territory<br>Task<br>Engineer",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Navigate to Capacity Limitations suboption - Generic Capacity page should be displayed",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "In Generic Capacity contains fields like Name, District, Task Type Category, Capacity Threshold and along with the options like manage filters, sorting, refresh, New, Export - In Generic Capacity , fields like Name, District, Task Type Category, Capacity Threshold should be displayed with the list and along with the options like manage filters, sorting, refresh, New, Export should be displayed",
        "completion": "tc.stepEvaluator.reset();\ntc.edit.sendKeys(EEdit.SUBJECT, subject);\ntc.edit.sendKeys(EEdit.REASON, reason);\nWaitFor.specificTime(Duration.ofSeconds(1));\ntc.combo.select(EComboBox.SHS_TEAM, shsTeam);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equalsIgnoreCase(subject), \"subject is not editable\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not editable\")\n.add(() -> tc.edit.exists(EEdit.SOLD_TO), \"Sold to is not editable\")\n.add(() -> tc.edit.exists(EEdit.SHIP_TO), \"Ship to is not editable\")\n.add(() -> tc.edit.exists(EEdit.ADDITIONAL_EMAIL), \"emailID is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\", tc.stepEvaluator\n.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on Sorting - Generic Capacity Sorting page should be displayed",
        "completion": "tc.edit.sendKeys(EEdit.BROWSE_FILES_INPUT, path);\nString selectedFile = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of each individual file is created in section Attachments\", true,\npath.contains(selectedFile), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select Columns list are like Name, District, Task Type Category, Capacity Threshold - Select Columns list are like Name, District, Task Type Category, Capacity Threshold should be displayed under the select columns list",
        "completion": "String selectedFile1 = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of file is created in section Attachments\", true,\npath.contains(selectedFile1), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Drag the Selected Columns and drop in the Sort by table - Dragged select columns should be dropped in the sort by table",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.browser.getPageTitle().equalsIgnoreCase(\"Almost there! Please check your information.\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - 3. Check your information\",\ntrue, tc.progressBar.getNames().contains(\"Check your Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Set the sorting for each fields like :<br> Name as A-Z or Z-A<br>District as A-Z or Z-A<br>Task Type Category as A-Z or Z-A<br>Capacity Threshold as Acending or Decesending - All fields in the sort by should be validate",
        "completion": "tc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equalsIgnoreCase(subject), \"subject is not editable\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not editable\")\n.add(() -> tc.edit.exists(EEdit.SOLD_TO), \"Sold to is not editable\")\n.add(() -> tc.edit.exists(EEdit.SHIP_TO), \"Ship to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"Values of the fields are the same as were entered in step 3 and 5\", \"ok\",\ntc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on sort - All the fields should be sorted and displayed.",
        "completion": "tc.stepEvaluator.reset();\ntc.checkBox.check(ECheckBox.MARK_AS_URGENT);\ntc.stepEvaluator\n.add(() -> tc.checkBox.isChecked(ECheckBox.MARK_AS_URGENT), \"check box is not checked\");\ntc.addStepInfo(\"Checkboxes can be checked\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "URL : https://na1.kinaxis.net/web/SIET04_QA002/<br>Open Rapid Response by clicking on the URL given above.<br> - Rapid Response will be visible.",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Then open the workbook \u2018SHS S&OP Forecast Accuracy\u2019 as shown <br> - Workbook is opened.",
        "completion": "WaitFor.condition(() -> tc.tile.exists(ETile.SHOW_ME_All_REQUESTS));\ntc.tile.open(ETile.SHOW_ME_All_REQUESTS);\nWaitFor.condition(() -> tc.tab.exists(ETab.byIndex(0)));\ntc.addStepInfo(\"\"\"\nPage with dashboard with all requests created by the user is opened on tab Created Requests\nFor reference check attached screenshot\n\"\"\", true, tc.tab.exists(ETab.byIndex(0)), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "In the data settings dialogue box select the \u2018Forecast Accuracy\u2019 worksheet. Select the \u2018S&OP Candidate\u2019 scenario. <br><br> - The scenario is selected.",
        "completion": "BrowserControl.waitForLoadingIndicator();\nList<String> actualTabs = tc.tab.getAllTabsNames();\ntc.addStepInfo(\"\"\"\nPage contains tabs:\n- My Dashboard\n- Created Requests\n- Submitted\n- Under Review\n- Pending Requestor Response\n- Referred Out\n- Referred Out to Me\n- Resolved\n\"\"\", true, !actualTabs.isEmpty(), new ComparerOptions().takeScreenShotPlatform());\n});\n}\n}"
    },
    {
        "prompt": "Launch CAD application and login to the application - CAD application launched and logged in successfully",
        "completion": "tc.spinner.waitFor(ESpinner.LOADING_INDICATOR, Duration.ofSeconds(10));\ntc.menu.select(EMenu.CREATE, EMenu.SUPPLIER_QUALIFICATION);\nWaitFor.condition(() -> tc.combo.exists(EComboBox.SELECT_A_QMS));\ntc.addStepInfo(\"Button click works as expected and upload documents screen opened\", true,\ntc.combo.exists(EComboBox.SELECT_A_QMS) , new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on menu button - Below options should be reflected on the left side of the screen<br>Search Field<br>Home<br>Schedule<br>Calendar Management<br>Views<br>Analytics",
        "completion": "tc.button.click(EButton.CANCEL);\n\n});\n}\n}"
    }
]