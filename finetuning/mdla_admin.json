[
    {
        "prompt": "Log in to Digital Customer Portal - Landing page is Displayed",
        "completion": "tc.browser.start(WebDrv.CHROME, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Check that page contains top ribbon with:-Siemens healthineers Logo<br>-My Digital Lab Assistant (vX.X.X)<br>-Contact icon<br>-Language icon<br>-Settings icon<br>-Notification bell icon<br>-Icon with name shortcut<br>-Name of logged in user<br>-Admin icon      <br>For reference check attached screenshot - Landing page top ribbon content is according screenshot and consists of:- Contact icon<br>- Settings icon<br>- Notification bell icon<br>- Icon with name shortcut<br>- Name of logged in user<br>- Admin icon",
        "completion": "tc.stepEvaluator.reset();\nWaitFor.condition(() -> tc.button.exists(EButton.ADMIN));\ntc.stepEvaluator\n.add(() -> tc.menu.exists(EMenu.LANGUAGE), \"Language icon is not present\")\n.add(() -> tc.menu.exists(EMenu.SETTINGS), \"Settings icon is not present\")\n.add(() -> tc.button.exists(EButton.CONTACT), \"Contact button is not present\")\n.add(() -> tc.button.exists(EButton.NOTIFICATIONS), \"Notifications button is not present\")\n.add(() -> !tc.browser.getActiveUser(EActions.ICON).isEmpty(), \"user icon is not present\")\n.add(() -> !tc.browser.getActiveUser(EActions.USERNAME).isEmpty(), \"user name is not present\")\n.add(() ->  tc.button.exists(EButton.ADMIN), \"admin icon is not present\");\n\ntc.addStepInfo(\"\"\"\nLanding page top ribbon content is according screenshot and consists of:\n- Contact icon\n- Settings icon\n- Notification bell icon\n- Icon with name shortcut\n- Name of logged in user\n- Admin icon\"\"\",\n\"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Check that page contains following tiles:- Report an issue with an order or delivery<br>- Show me my Requests<br>- Question about an order or eSuport assistance<br>- Question about my Account<br>- Request Allocation or Saturday Delivery (SET Request)<br><br>For reference check attached screenshot - Landing page tile content is according screenshot and consists of following tiles:- Report an issue with an order or delivery<br>- Show me my Requests<br>- Question about an order or eSuport assistance<br>- Question about my Account<br>- Request Allocation or Saturday Delivery (SET Request)",
        "completion": "tc.stepEvaluator.reset();\nList<String> wantedTiles = Arrays.asList(\"Report an issue with an order or delivery\", \"Question about an order or eSupport assistance\",\n\"Questions about my Account\", \"Request Allocation or Saturday Delivery (SET Request)\", \"Show me all Requests\");\nList<String> actualTiles = tc.tile.getAllTilesName();\nboolean areEqual = wantedTiles.size() == actualTiles.size() &&\nwantedTiles.stream().allMatch(item ->\nCollections.frequency(wantedTiles, item) == Collections.frequency(actualTiles, item));\ntc.addStepInfo(\"\"\"\nLanding page tile content is according screenshot and consists of following tiles:\n- Report an issue with an order or delivery\n- Show me my Requests\n- Question about an order or eSuport assistance\n- Question about my Account\n- Request Allocation or Saturday Delivery (SET Request)\"\"\",\ntrue ,areEqual ,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile Report an issue with an order or delivery - Page with details for reporting an issue is opened",
        "completion": "tc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Which request would you like to submit?\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened\", true,\ntc.browser.getPageTitle().contains(\"Which request would you like to submit?\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile Show me my Requests - Page with dashboard with all requests created by the user is opened",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.SHOW_ME_All_REQUESTS));\ntc.tile.open(ETile.SHOW_ME_All_REQUESTS);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"take a look at your Requests\"));\ntc.addStepInfo(\"Page with dashboard with all requests created by the user is opened\", true,\ntc.browser.getPageTitle().contains(\"take a look at your Tasks\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile Question about an order or eSuport assistance - Page with details for reporting an issue is opened",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.QUESTIONS_ABOUT_AN_ORDER));\ntc.tile.open(ETile.QUESTIONS_ABOUT_AN_ORDER);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Which request would you like to submit?\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened\", true,\ntc.browser.getPageTitle().contains(\"Which request would you like to submit?\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile Question about my Account - Page with details for reporting an issue is opened",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.QUESTIONS_ABOUT_MY_ACCOUNT));\ntc.tile.open(ETile.QUESTIONS_ABOUT_MY_ACCOUNT);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Which request would you like to submit?\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened\", true,\ntc.browser.getPageTitle().contains(\"Which request would you like to submit?\")\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile Request Allocation or Saturday Delivery (SET Request) - User is redirected to external Sales Efficiency tool page",
        "completion": "tc.browser.navigateToURL(ETestData.QA_ENV_URL);\nWaitFor.condition(() -> tc.tile.exists(ETile.REQUEST_ALLOCATION));\ntc.tile.open(ETile.REQUEST_ALLOCATION);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.browser.switchToTab(1);\nthis.provideAuth(tc);\nWaitFor.condition(() -> tc.browser.getTitleOfActiveWindow().equals(\"Sales Efficiency Tool\"));\ntc.addStepInfo(\"User is redirected to external Sales Efficiency tool page\", true,\ntc.browser.getTitleOfActiveWindow().equals(\"Sales Efficiency Tool\")\n, new ComparerOptions().takeScreenShotPlatform());\n});\n}\n\nprivate void provideAuth(MdlaHandler tc)\n{\ntry\n{\nString url = \"https://login.microsoftonline.com/common/federation/OAuth2ClaimsProvider\";\nCoreCssControl css = IocBuilder.getContainer().getComponent(CoreCssControl.class);\nCoreKeyboardControl keys = new CoreKeyboardControl();\nWaitFor.condition(() -> tc.browser.getCurrentURL().equalsIgnoreCase(url), Duration.ofSeconds(60));\nif(tc.browser.getCurrentURL().equalsIgnoreCase(url))\n{\nWebElement ele = css.findControl(By.xpath(\"//input[text()='Continue']\"));\nif(ele != null)\n{\nele.click();\nTcLog.action(\"Clicked on continue button\");\n}\nelse\n{\nkeys.pressKey(Keys.ENTER);\nTcLog.action(\"Pressed Enter\");\n}\n}\n}\ncatch (StaleElementReferenceException e)\n{\nTcLog.info(\"Element staled,  Retrying....\");\nWaitFor.specificTime(Duration.ofSeconds(2));\nthis.provideAuth(tc);\n}\ncatch (NullPointerException | NotFoundException | ElementClickInterceptedException e)\n{\nTcLog.error(\"Unable to provide the auth\");\n}\n}\n}"
    },
    {
        "prompt": "Log in to Digital Customer Portal - Landing page is displayed",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on \"Contact\" icon  on top ribbon - Popup with following text is displayed:Contact Support<br>For any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233<br>For reference check attached screenshot",
        "completion": "tc.button.click(EButton.CONTACT);\nWaitFor.condition(tc.modal::exists);\nString modalTitle = \"Contact Support\";\nString modalContent = \"For any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233\";\ntc.stepEvaluator\n.add(() -> tc.modal.getTitle().equalsIgnoreCase(modalTitle), \"modal title not found\")\n.add(() -> tc.modal.getContent().equalsIgnoreCase(modalContent), \"Modal content not found\");\ntc.addStepInfo(\"\"\"\nPopup with following text is displayed:\nContact Support\nFor any questions regarding this portal feel free to reach out to our E-Support team: 800-242-3233\nFor reference check attached screenshot\n\"\"\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on \"Close\" button - Landing page is displayed",
        "completion": "tc.button.click(EButton.CLOSE);\ntc.addStepInfo(\"Landing page is displayed\", true, !tc.modal.exists(),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on \"Language\" icon  on top ribbon - Options English and Deutsch are displayed.",
        "completion": "tc.menu.select(EMenu.LANGUAGE);\ntc.addStepInfo(\"Options English and Deutsch are displayed.\", true, tc.menu.isMenuItemsDisplayed()\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on \"Deutsch\" - Landing page is displayed. Language is changed to german language.",
        "completion": "tc.menu.selectFromDropDown(EMenu.LANGUAGE, \"Deutsch\");\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Willkommen\"));\nboolean isLanguageGM = tc.browser.getPageTitle().contains(\"Willkommen\");\ntc.addStepInfo(\"Landing page is displayed. Language is changed to german language.\", true, isLanguageGM,\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on \"Language\" icon  on top ribbon and select \"English\" - Landing page is displayed. Language is changed to english language.",
        "completion": "tc.menu.selectFromDropDown(EMenu.LANGUAGE, \"English\");\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Welcome\"));\nboolean isLanguageEN = tc.browser.getPageTitle().contains(\"Welcome\");\ntc.addStepInfo(\"Landing page is displayed. Language is changed to English language.\", true, isLanguageEN,\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on \"Settings\" icon  on top ribbon - Options \"Theme\" and \"Email Notification Settings\" are displayed.",
        "completion": "tc.menu.select(EMenu.SETTINGS);\ntc.addStepInfo(\"Options 'Theme' and 'Email Notification Settings' are displayed.\", true, tc.menu.isMenuItemsDisplayed()\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on \"Email Notification Settings\" - Email Notifications page is displayed.All notifications are turned on by default.<br>For reference check attached screenshot",
        "completion": "tc.menu.selectFromDropDown(EMenu.SETTINGS, \"User Settings\");\nWaitFor.specificTime(Duration.ofSeconds(2));\nWaitFor.condition(() -> tc.toggle.exists(EToggle.byIndex(0)));\ntc.addStepInfo(\"\"\"\nEmail Notifications page is displayedAll notifications are turned on by default.\nFor reference check attached screenshot\"\"\", true, tc.toggle.exists(EToggle.byIndex(0))\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Change notifications from ON to OFF and back to ON - Messsage \"Sucessfuly updated settings\" is displayed after any notification option is changed",
        "completion": "tc.stepEvaluator.reset();\ntc.toggle.check(EToggle.byIndex(1));\ntc.toggle.uncheck(EToggle.byIndex(1));\ntc.stepEvaluator.add(() -> tc.browser.getMessage().contains(\"Successfully updated settings\") ,\n\"pop up not displayed after Unchecking toggle\");\ntc.addStepInfo(\"Messsage 'Sucessfuly updated settings' is displayed after any notification option is changed\",\n\"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on \"My Digital Lab Assistant (vX.X.X)\" on top ribbon - User is redirected to landing page",
        "completion": "tc.button.click(EButton.APP_NAME);\nWaitFor.condition(() -> tc.tile.exists(ETile.QUESTIONS_ABOUT_AN_ORDER));\nboolean isHopePageOpened = tc.browser.getPageTitle().contains(\"Welcome\");\ntc.addStepInfo(\"User is redirected to landing page\", true, isHopePageOpened,\nnew ComparerOptions().takeScreenShotPlatform());\n\n});\n}\n}"
    },
    {
        "prompt": "Log in to Digital Customer Portal - Landing page is displayed",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", \"Landing page is Displayed\", tc.button.exists(EButton.CONTACT) ?\n\"Landing page is Displayed\" : \"Landing page is not Displayed\", new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile \"Report an issue with an order or delivery\" - Page with details for reporting an issue is opened - Part 1. Personal information",
        "completion": "tc.tile.open(ETile.REPORT_AN_ISSUE);\nWaitFor.condition(() -> tc.edit.exists(EEdit.MOBILE));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 1. Personal information\",\ntrue, tc.progressBar.getNames().contains(\"Personal Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter data in to following fields:- Name - name of logged user, not possible to modify<br>- E-Mail - email of logged user, not possible to modify<br>- @Mobile<br>- @Country<br>- @State<br>- Preferred @language<br><br>For reference check attached screenshot - User is able to enter information in specified fields",
        "completion": "tc.edit.sendKeys(EEdit.MOBILE, number, true);\ntc.combo.select(EComboBox.COUNTRY, country);\ntc.combo.select(EComboBox.STATE, state);\ntc.edit.sendKeys(EEdit.PREFERRED_LANGUAGE, language, true);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equalsIgnoreCase(number), \"Mobile is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equalsIgnoreCase(language), \"language is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\",tc.stepEvaluator.eval()\n,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Next\" button - Page with details for reporting an issue is opened - Part 2. Request information",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.edit.exists(EEdit.SUBJECT));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - Part 2. Request information\",\ntrue, tc.progressBar.getNames().contains(\"Request Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter data in to following fields:- Request type - Possible to select one from the list(\"Order Issue\", \"Question about Account\", \"Invoice inquiry\", \"Question about Order\")<br>- Subject<br>- Reason<br>- Classification<br>- Siemens Healthineers Team<br>- Sold To<br>- Ship to<br>- Puchase Order or Order Number - add multiple entries by clicking on \"+ Add Order Number\"<br>- Additional E-Mail - add multiple entries by clicking on \"+ Add E-Mail\"<br><br>For reference check attached screenshot - User is able to enter information in specified fields",
        "completion": "tc.stepEvaluator.reset();\ntc.edit.sendKeys(EEdit.SUBJECT, subject);\ntc.edit.sendKeys(EEdit.REASON, reason);\nWaitFor.specificTime(Duration.ofSeconds(1));\ntc.combo.select(EComboBox.CLASSIFICATIONS, classification);\nWaitFor.specificTime(Duration.ofSeconds(1));\ntc.combo.select(EComboBox.SHS_TEAM, shsTeam);\ntc.edit.sendKeys(EEdit.SOLD_TO, soldTo);\ntc.edit.sendKeys(EEdit.SHIP_TO, shipTo);\ntc.edit.sendKeys(EEdit.PURCHASE_ORDER, purchaseOrder);\ntc.edit.sendKeys(EEdit.ADDITIONAL_EMAIL, emailId);\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equalsIgnoreCase(subject), \"subject is not editable\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equalsIgnoreCase(soldTo), \"Sold to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equalsIgnoreCase(shipTo), \"Ship to is not editable\")\n.add(() -> tc.edit.getValue(EEdit.PURCHASE_ORDER).equalsIgnoreCase(purchaseOrder), \"purchase order is not editable\")\n.add(() -> tc.edit.getValue(EEdit.ADDITIONAL_EMAIL).equalsIgnoreCase(emailId), \"emailID is not editable\");\ntc.addStepInfo(\"User is able to enter information in specified fields\", \"ok\", tc.stepEvaluator\n.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "In section Attachments click on icon \"Browse files\", select files that will be attached to this issue and click \"Open\" - Icon with name of each individual file is created in section Attachments",
        "completion": "tc.edit.sendKeys(EEdit.BROWSE_FILES_INPUT, path);\nString selectedFile = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of each individual file is created in section Attachments\", true,\npath.contains(selectedFile), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Drag and drop file from your computer in to section Attachments - Icon with name of file is created in section Attachments",
        "completion": "String selectedFile1 = tc.edit.getValue(EEdit.BROWSE_FILES_INPUT);\ntc.addStepInfo(\"Icon with name of file is created in section Attachments\", true,\npath.contains(selectedFile1), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Next\" button - Page with details for reporting an issue is opened - 3. Check your information",
        "completion": "tc.button.click(EButton.NEXT);\nWaitFor.condition(() -> tc.browser.getPageTitle().equalsIgnoreCase(\"Almost there! Please check your information.\"));\ntc.addStepInfo(\"Page with details for reporting an issue is opened - 3. Check your information\",\ntrue, tc.progressBar.getNames().contains(\"Check your Information\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Verify that the content of fields on the screenFor reference check attached screenshot - Values of the fields are the same as were entered in step 3 and 5",
        "completion": "tc.stepEvaluator.reset();\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equals(subject), \"subject is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equals(reason), \"reason is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equals(soldTo), \"Sold to is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equals(shipTo), \"Ship to is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equals(number), \"Mobile is is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.PREFERRED_LANGUAGE).equals(language), \"language is not same as entered value\");\ntc.addStepInfo(\"Values of the fields are the same as were entered in step 3 and 5\", \"ok\",\ntc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Check the checkboxes:- \"Informational Only\" or \"Refer Out Request adter Submission\" - Checkboxes can be checked.When one of checkboxes \"Informational Only\" or \"Refer Out Request adter Submission\" is checked the other is greyed out and impossible to check<br><br>",
        "completion": "tc.stepEvaluator.reset();\ntc.checkBox.check(ECheckBox.INFORMATION_ONLY);\ntc.stepEvaluator\n.add(() -> !tc.checkBox.isDisabled(ECheckBox.REFER_OUT_REQUEST_AFTER_SUBMISSION), \"check box is not disabled\")\n.add(() -> tc.checkBox.isChecked(ECheckBox.INFORMATION_ONLY), \"check box is not checked\");\ntc.addStepInfo(\"\"\"\nCheckboxes can be checked.\nWhen one of checkboxes \"Informational Only\" or \"Refer Out Request adter Submission\"\nis checked the other is greyed out and impossible to check\n\"\"\", \"ok\", tc.stepEvaluator.eval(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Save + Submit\" button - Popup with following text is diplayed:Save & Submit Request<br>Are you sure you want to submit this request? You will not be able to make any changes after submission<br><br>For reference check attached screenshot",
        "completion": "tc.button.click(EButton.SAVE_PLUS_SUBMIT);\nWaitFor.condition(tc.modal::exists);\nString modalTitle1 = tc.modal.getTitle();\nString modalContent1 = tc.modal.getContent();\nboolean isModalPopped = modalTitle1.equalsIgnoreCase(\"Save & Submit request\") && modalContent1\n.equalsIgnoreCase(\"Are you sure you want to submit this request? You will not be able to make any changes after submission.\");\ntc.addStepInfo(\"\"\"\nPopup with following text is diplayed:\nSave & Submit Request\nAre you sure you want to submit this request? You will not be able to make any changes after submission\n\"\"\", true, isModalPopped, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Yes, submit\" button - Popup with following test is diplayed:Congratulations! Your issue has been reported.<br><br>For reference check attached screenshot<br>",
        "completion": "tc.button.click(EButton.YES_SUBMIT);\nWaitFor.specificTime(Duration.ofSeconds(3));\nWaitFor.condition(tc.modal::exists, Duration.ofSeconds(40));\nString modalTitle2 = tc.modal.getTitle();\nboolean isModalPopped2 = modalTitle2.contains(\"Congratulations\");\ntc.addStepInfo(\"popup with following test is diplayed:\" +\n\"Congratulations! Your issue has been reported.\", true, isModalPopped2, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Go back to the dashboard\" button - Landing page is displayed",
        "completion": "tc.button.click(EButton.GO_BACK_TO_THE_DASHBOARD);\nWaitFor.condition(() -> tc.browser.getPageTitle().contains(\"Welcome\"));\ntc.addStepInfo(\"Landing page is displayed\", true, tc.browser.getPageTitle().contains(\"Welcome\"),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Verify that notification was not sent to email addresses menitoned in fields E-Mail and Additional E-Mail . For reference check attached screenshot . - Notification email was not received by email addresses menitoned in fields E-Mail and Additional E-Mail",
        "completion": "tc.addStepInfo(\"Notification email was not received by email addresses menitoned in fields E-Mail and Additional E-Mail\",\ntrue, true, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile \"Show me my Requests\" - Page with dashboard with all requests created by the user is opened on tab My Dashboard . For reference check attached screenshot .",
        "completion": "tc.tile.open(ETile.SHOW_ME_All_REQUESTS);\nWaitFor.condition(() -> tc.tab.exists(ETab.MY_DASHBOARD));\ntc.tab.select(ETab.MY_DASHBOARD);\ntc.addStepInfo(\"Page with dashboard with all requests created by the user is opened on tab My Dashboard . For reference check attached screenshot .\",\ntrue, tc.tab.isSelected(ETab.MY_DASHBOARD), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tab \"Created Requests\" - Page with list of all requests created by the user is opened on tab My Dashboard For reference check attached screenshot<br>",
        "completion": "tc.tab.select(ETab.CREATED_REQUESTS);\nBrowserControl.waitForLoadingIndicator();\nWaitFor.condition(() -> !tc.table.getItemsFromColumn(ETable.APP_TABLE, EColumn.byIndex(2)).isEmpty());\nList<String> requests = tc.table.getItemsFromColumn(ETable.APP_TABLE, EColumn.byIndex(2));\ntc.addStepInfo(\"Page with list of all requests created by the user is opened on tab My Dashboard \" +\n\"For reference check attached screenshot\", true, !requests.isEmpty(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter request ID or part of Subject in to search field - Only requests matching search conditions are displayed",
        "completion": "tc.edit.sendKeys(EEdit.SEARCH, subject);\nWaitFor.condition(() -> tc.table.getItemsFromColumn(ETable.APP_TABLE, EColumn.byIndex(2)).contains(subject));\nboolean request = tc.table.getItemsFromColumn(ETable.APP_TABLE, EColumn.byIndex(2)).contains(subject);\ntc.addStepInfo(\"Only requests matching search conditions are displayed\", true,\nrequest, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on filtered request - Request detail page is opened on Comment tabFor reference check attached screenshot<br>",
        "completion": "tc.table.itemClick(ETable.APP_TABLE, EColumn.byIndex(2), subject);\nWaitFor.condition(() -> tc.tab.exists(ETab.COMMENTS));\ntc.addStepInfo(\"Request detail page is opened on Comment tab\", true,\ntc.tab.isSelected(ETab.COMMENTS), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Verify content of fields on the screenFor reference check attached screenshot<br> - Reason from step 5 is used as 1st comment",
        "completion": "WaitFor.condition(() -> this.getComment().contains(reason));\nList<String> selectedReason = this.getComment();\ntc.addStepInfo(\"Reason from step 5 is used as 1st comment\", true,\nselectedReason.contains(reason), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Enter text, add attachment and submit new comment by clicking \">\" icon - New comment is added",
        "completion": "tc.button.click(EButton.REOPEN_REQUEST);\nWaitFor.condition(tc.modal::exists);\ntc.edit.sendKeys(EEdit.COMMENT_MODAL, \"NA\");\ntc.button.click(EButton.REOPEN_REQUEST_MODAL);\nWaitFor.specificTime(Duration.ofSeconds(2));\ntc.edit.sendKeys(EEdit.COMMENT, reason+\"_New\");\ntc.button.click(EButton.SEND_ICON);\nWaitFor.condition(tc.modal::exists);\ntc.button.click(EButton.SUBMIT_ANYWAY);\nWaitFor.specificTime(Duration.ofSeconds(12));\nList<String> selectedReason1 = this.getComment();\ntc.addStepInfo(\"New comment is added\", true,\nselectedReason1.contains(reason+\"_New\"), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select tab \"Request Information\" and verify content of fields on the screenFor reference check attached screenshot<br> - Values of the fields are the same as were entered in step 3 and 5",
        "completion": "tc.stepEvaluator.reset();\ntc.tab.select(ETab.REQUEST_INFORMATION);\nWaitFor.condition(() -> tc.edit.getValue(EEdit.SHIP_TO).equalsIgnoreCase(shipTo));\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SUBJECT).equals(subject), \"subject is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.REASON).equals(reason), \"reason is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equals(soldTo), \"Sold to is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equals(shipTo), \"Ship to is not same as entered value\");\ntc.addStepInfo(\"Values of the fields are the same as were entered in step 3 and 5\", \"ok\", tc.stepEvaluator.eval()\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select tab \"Requestor Information\" and verify content of fields on the screenFor reference check attached screenshot<br> - Values of the fields are the same as were entered in step 3 and 5",
        "completion": "tc.stepEvaluator.reset();\ntc.tab.select(ETab.REQUESTOR_INFORMATION);\nWaitFor.condition(() -> tc.edit.getValue(EEdit.SHIP_TO).equalsIgnoreCase(shipTo));\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.SOLD_TO).equals(soldTo), \"Sold to is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.SHIP_TO).equals(shipTo), \"Ship to is not same as entered value\")\n.add(() -> tc.edit.getValue(EEdit.MOBILE).equals(number), \"Mobile is is not same as entered value\");\ntc.addStepInfo(\"Values of the fields are the same as were entered in step 3 and 5\", \"ok\", tc.stepEvaluator.eval()\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select tab \"Request Overview\" and verify content of fields on the screenFor reference check attached screenshot<br> - Values of the fields are the same as were entered in step 3 and 5",
        "completion": "tc.stepEvaluator.reset();\ntc.tab.select(ETab.REQUEST_OVERVIEW);\nWaitFor.condition(() -> tc.edit.getValue(EEdit.SHIP_TO).equalsIgnoreCase(shipTo));\ntc.stepEvaluator\n.add(() -> tc.edit.getValue(EEdit.REASON).equalsIgnoreCase(reason), \"reason is not same as entered value\")\n.add(() -> tc.edit.exists(EEdit.SOLD_TO), \"Sold to is not same as entered value\")\n.add(() -> tc.edit.exists(EEdit.SHIP_TO), \"Ship to is not same as entered value\");\ntc.addStepInfo(\"Values of the fields are the same as were entered in step 3 and 5\", \"ok\", tc.stepEvaluator.eval()\n, new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on button \"Back\" - Page with dashboard with all requests created by the user is opened on tab My Dashboard",
        "completion": "tc.browser.navigateBack();\nWaitFor.condition(() -> tc.tab.exists(ETab.MY_DASHBOARD));\ntc.tab.select(ETab.MY_DASHBOARD);\ntc.addStepInfo(\"Page with dashboard with all requests created by the user is opened on tab My Dashboard\",\ntrue, tc.tab.isSelected(ETab.MY_DASHBOARD), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tab \"Created Requests\" and click on your request created in previous steps - Request detail page is opened on Comment tabFor reference check attached screenshot<br>",
        "completion": "tc.tab.select(ETab.CREATED_REQUESTS);\nWaitFor.condition(() -> tc.table.exists(ETable.APP_TABLE));\ntc.edit.sendKeys(EEdit.SEARCH, subject);\nWaitFor.condition(() -> tc.table.getValue(ETable.APP_TABLE, EColumn.byIndex(2), 0).equalsIgnoreCase(subject));\ntc.table.itemClick(ETable.APP_TABLE, EColumn.byIndex(2), subject);\nWaitFor.condition(() -> tc.tab.exists(ETab.COMMENTS));\ntc.addStepInfo(\"Request detail page is opened on Comment tab\",\ntrue, tc.tab.isSelected(ETab.COMMENTS) ,new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Select tab \"Request Information\" and click on the button \"Delete\" - Popup with following text is diplayed:Delete Request<br>Request will be removed from your list of saved requests.<br><br>For reference check attached screenshot",
        "completion": "tc.tab.select(ETab.REQUEST_INFORMATION);\nWaitFor.condition(() -> tc.button.exists(EButton.DELETE));\ntc.button.click(EButton.byIndex(7));\nWaitFor.condition(tc.modal::exists);\ntc.addStepInfo(\"\"\"\nPopup with following text is diplayed:\nDelete Request\nRequest will be removed from your list of saved requests.\"\"\", true,\ntc.modal.exists(), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click \"Confirm\" button - Notification about successful operation is displayed on the bottom of the screen. User is redirecrted to Landing page",
        "completion": "tc.button.click(EButton.CONFIRM);\nWaitFor.condition(() -> !tc.browser.getMessage().isEmpty(), Duration.ofMinutes(1));\ntc.addStepInfo(\"Notification about successful operation is displayed on the bottom of the screen. User is redirecrted to Landing page\",\ntrue, tc.browser.getMessage().equalsIgnoreCase(\"Request deleted successfully.\"),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile \"Show me my Requests\" and open tab \"Created Requests\" - Order selected in step 25 is no longer visible in the list.",
        "completion": "tc.tile.open(ETile.SHOW_ME_All_REQUESTS);\nWaitFor.condition(() -> tc.tab.exists(ETab.CREATED_REQUESTS));\ntc.tab.select(ETab.CREATED_REQUESTS);\nWaitFor.condition(() -> tc.table.exists(ETable.APP_TABLE));\nboolean isRequestDeleted = tc.table.getItemsFromColumn(ETable.APP_TABLE, EColumn.byIndex(2)).\ncontains(subject);\ntc.addStepInfo(\"Order selected in step 25 is no longer visible in the list\", true\n, !isRequestDeleted, new ComparerOptions().takeScreenShotPlatform());\n\n});\n}\n\nprivate List<String> getComment()\n{\nCoreCssControl css = IocBuilder.getContainer().getComponent(CoreCssControl.class);\nList<String> comments = new ArrayList<>();\ntry\n{\nList<WebElement> eles = css.findControls(By.cssSelector(\"div[class=\\\"comment-html-content\\\"]\"));\nif (eles != null)\n{\nfor(WebElement ele : eles)\n{\ncomments.add(ele.getText());\n}\n}\n}\ncatch (Exception e)\n{\nTcLog.error(\"Unable to fetch comment\");\n}\nreturn comments;\n}\n}"
    },
    {
        "prompt": "Log in to Digital Customer Portal as Admin - Landing page is displayed",
        "completion": "tc.browser.start(WebDrv.EDGE, ETestData.QA_ENV_URL, new CoreStartOptions());\ntc.browser.localLogin();\nWaitFor.condition(() -> tc.tile.exists(ETile.REPORT_AN_ISSUE));\ntc.addStepInfo(\"Landing page is Displayed\", true, tc.button.exists(EButton.CONTACT),\nnew ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Click on tile \"Show me my Requests\" - Page with dashboard with all requests created by the user is opened on tab Created RequestsFor reference check attached screenshot<br>",
        "completion": "WaitFor.condition(() -> tc.tile.exists(ETile.SHOW_ME_All_REQUESTS));\ntc.tile.open(ETile.SHOW_ME_All_REQUESTS);\nWaitFor.condition(() -> tc.tab.exists(ETab.byIndex(0)));\ntc.addStepInfo(\"\"\"\nPage with dashboard with all requests created by the user is opened on tab Created Requests\nFor reference check attached screenshot\n\"\"\", true, tc.tab.exists(ETab.byIndex(0)), new ComparerOptions().takeScreenShotPlatform());"
    },
    {
        "prompt": "Verify that page contains following tabs:Page contains tabs:<br>- My Dashboard<br>- Created Requests<br>- Submitted<br>- Under Review<br>- Pending Requestor Response<br>- Referred Out<br>- Referred Out to Me<br>- Resolved<br><br>For reference check attached screenshot - Page contains tabs:- My Dashboard<br>- Created Requests<br>- Submitted<br>- Under Review<br>- Pending Requestor Response<br>- Referred Out<br>- Referred Out to Me<br>- Resolved",
        "completion": "BrowserControl.waitForLoadingIndicator();\nList<String> actualTabs = tc.tab.getAllTabsNames();\ntc.addStepInfo(\"\"\"\nPage contains tabs:\n- My Dashboard\n- Created Requests\n- Submitted\n- Under Review\n- Pending Requestor Response\n- Referred Out\n- Referred Out to Me\n- Resolved\n\"\"\", true, !actualTabs.isEmpty(), new ComparerOptions().takeScreenShotPlatform());\n});\n}\n}"
    }
]